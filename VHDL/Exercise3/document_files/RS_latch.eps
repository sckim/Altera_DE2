%!PS-Adobe-3.0 EPSF-3.0
%%Title: (RS_latch.fm)
%%Version: 1 5
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 10:27:09 10/04/05
%%For: (sbrown)
%%DocumentData: Clean7Bit
%%BoundingBox: 195 591 444 691
%%HiResBoundingBox: 195.0 591.0 444.0 691.0
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1220 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:c7139107-b5b2-49a6-aebf-b6df2c298072' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:c7139107-b5b2-49a6-aebf-b6df2c298072' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='FrameMaker 7.0' xap:ModifyDate='2005-10-04T10:26:59-04:00' xap:CreateDate='1995-03-15T15:16:18Z' xap:MetadataDate='2005-10-04T10:26:59-04:00'></rdf:Description>
<rdf:Description rdf:about='uuid:c7139107-b5b2-49a6-aebf-b6df2c298072' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:6006fda8-722d-4f4a-a739-a6bde34b3156'/>
<rdf:Description rdf:about='uuid:c7139107-b5b2-49a6-aebf-b6df2c298072' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>RS_latch.fm</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>sbrown</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
195 591 249 100 rectclip
%ADOBeginSubsetFont: HODMHH+TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /HODMHH+TimesNewRomanPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210732def000000cc000000566376
7420f32cda8100000124000007c66670676dc3a61d01000008ec00000631
676c7966f9988ba5000059d400001b7068656164cf5b1d8300000f200000
00366868656112ef12f600000f5800000024686d7478b14216ca00000f7c
00001a286c6f636100acb1b0000029a400001a2c6d6178700d0110ae0000
43d0000000206e616d6559313369000043f0000006cd70726570e43894a4
00004ac000000f1367646972000000000000000000000000000103350190
00050000059a053300000125059a0533000003a000660212010502020603
05040502030400007a878000000000000008000000004d6f6e6f00400020
fffc058cfe460133072101bb400001ffffff00000000058e0000054c001f
054c001c0394001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6a
ffe00313000000ad000000ad0000000000250096009f002400f0013100c2
00c0004a00a6004100500094004700cf00af000e007901cb000400230044
00a80025011f0002004600170105009900d9005c007200e500e00028004b
00de011200240045007000160039ffe90016004b0088ffb900d9000a0043
00ae00ba016c0153002f00430048022c012b0025008fffc000170028ffcd
ffd80025009d00e50124ffb10048009d00e600110027007f00910012006a
00cafffc00000024006200a7017c01e900210060008b0434048aff6b003b
00b500d5014bff6b004d007905d809b5006c009100a3011701c0ffdfffe7
00be04010065007f00820088009900b200c0022e034305a000200026003d
004e00610065007b00d9011301310340ff27ff42ff99004e00a700f2022b
02c603070011002b0049005f008d00a100af00d600e400f5010b0135019d
01ab01ab01d101ee05d80000004b0075007a0080009d00a600a700ac00b9
013101310217021700020017002900550080008f00a500b200b300d0014b
015901c001c103a50530fe3fff14ff15ffe7ffff002a00580099009f00c1
00e400f40130015901ab01ab03220374041e04740532fd81004d0064009c
00d000d100d600de00e500f500f8012a012a01e1027e027fff57ffa8ffe5
00000008001f00380051005a006f0076007700a200c000c200c400f101fb
0209027e02cf04c5057a05f0ff92001200260042004b004f005100530064
008b00ae00b200b800b800d600f50111012001310138014e01520167018f
019601b801d901d902060221027102ea03b003cb03dc04360505ff3a0012
0016001e001f002300570068006c007e0088009200a500a800c500c90115
0126012d013001d601d901f6023b0244024402a302cf02de0385038f04fc
0586fee0feebfefbff8a0007004400470058007500aa00e400ef01160120
0129016a017301e3027e029002b4030e0310032303350341035403590388
039403c803ce047204ab04da0549056105ab0761fe6efed1ff4bff840000
00010006001e0027002c0034003700620066006a006b006c007000700072
007c0081008a008e0091009200a000ab00b800bf00c900d500dd00ec00f4
0100012101300169016a016d017c0185018e018e019901ac01c101c501c9
01e101f601f601f60222022202280236023f024302460267028502850294
02d002d602e8031c0363037f03800380039e03b603d90400040404ff0532
05320548058b05a706cb07280748076208ccfcedfd2afd59fddefe00fe1a
fe5bfe96fec1fee7ff56ff7900010025002d002e007c00870091009900a1
00a500a500aa00af00b600c600cc00d700dd00ec00f20102010501170118
0123012a012c0131013f014701490149014d01510151015501550157015a
015a0161016201680168017f0180018201830184018d0195019501950198
019901a501a901b601b601b701ba01ba01d501df01e601ea01f202000200
0203021702250227022f0239024302430247024f025202520267026f026f
027002720276027e02a702b302b902d603130325032d03610371039903ae
03c203d403f90402042c042f043c04560467048304cf04d104d804fb051f
05450568059e05c2061b06340655066a069806af06e806fc070607500762
077c07d407ff082500ad00c700aa00b5000000000000000000000000002f
06cf01730514047802df009c0018037005870155002500060254036c038e
03d2056601f0032001da018a0369036bffa3034602f8036f015602bf0122
031f053a0366008c00ff01ab02e102f402e70415015402e90128049101b7
026f034302060000000005d30415048305e8000002d7003a027d01c002c5
03830383ffbd003a059e01df059e02d1002004e0021300df01c001870297
000000ce0269028b0058043405fb0069015a01a905780182013e0288012a
03d4049e00e5032302f301f00196007a00cd014a0424025e023901ab00cf
00fd011e00ed017100700195004001bb01dd01b8000101a803a7014c020c
018d01b0020d0137010000cd032101d4030a005900000000012602150150
02f0025503bc06d00335010100d000d2007a01030130007c000000000000
000000fe006e006600940227002b0045004d00d3013200180097004100f4
febcffe9001605d8058b009100a1032c00520030005d02cb003a009200e5
00e500580086003200ba0099008800300298007cff8001640028004d0065
000200b8016a002f010b001100170100007f00040016022200a6005f0000
00f8000a00ca0043004b01ee0077012000f401c00028045f0000008c0445
00c20060007b008b008b0064005d00c2009c009206b505d3004f01170000
0420fe9e00cc00dc005e004600e30032001a003c0091005a00a1042c0041
002000490071009c009cfe4800400040008600cb0102007d003a003e006a
0050044800290096ff6a0097006900e0004c001b00c90069ff970043ffbd
0052ff83ff8b005fffa1ff5c00670053ffa8002a0076ffb2003600870559
0256052b043400de00c901c4004800db018b00b3004800da011601250118
00ea00ea00ae0000003e05bb008a04d70053003fff8cffd5001500280022
00990062004a00e4006d00ee00e5004803c00033fe4e02b1ff4603700079
05df0051ffa7ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a5
0025000040425554403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a1918171614131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b09051582320b00d
44235921212d2c20204518684420b001602045b04676688a4560442d2c01
b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01
b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045
b00325456164b050515845441b2121592d2cb00143632362b0002342b00f
2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112b
b0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112b
b0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112b
b0172344b0177ae41b21b0177ae45959182d2cb0022546608a46b040618c
482d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212110592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2c014b
53234b515ab00225b00425b006254923451869525a58b00225b00225b005
25462345696048592121212d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a
8a462320468a608a61b8ff8062232010238ab9035803588a70456020b000
5058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b1230188
51b1400188535a58b910000020885458b202010243604259b12401885158
b920000040885458b2020202436042b12401885458b2022002436042004b
014b5258b2020802436042591bb940000080885458b202040243604259b9
4000008063b80100885458b202080243604259b94000010063b802008854
58b202100243604259b94000020063b80400885458b20240024360425959
5959592d2cb0024354584b53234b515a58381b2121591b21212121592d00
0000000100000003000024074d515f0f3cf50819080000000000a2e31dc2
00000000b9d5b528fb74fd8c1000080e0000000900010001000000000001
00000721fe4500571000fb74fe2610000001000000000000000000000000
0000068a0639011c00000000020000000200000002aa00e4034400850400
00250400006c06aa00480639004b0171005102aa005402aa002e04000091
048300250200006e02aa005302000091023900030400004a040000f00400
002c040000530400002004000062040000580400004c0400007c04000051
023900b00239008e048300250483002504830025038d005c075e006105c7
0010055600220556004a05c7002304e3002a0473002105c7004805c70023
02aa0033031d002a05c7002204e30029071d002205c7ffe505c700480473
002205c70048055600230473008004e3003e05c7000b05c70012078d001b
05c7000f05c7001304e3001a02aa00a80239000302aa004b03c100250400
ffef02aa0076038d00490400fffb038d004604000044038d004c02aa004f
0400003d0400000d0239003c0239ff63040000110239003d063900110400
000c040000450400fff90400004402aa000d031d00640239001404000002
0400001105c7000d0400001b0400000c038d002903d7011b019a00a103d7
00b10454001405c7000e05c7000e0556004a04e3002a05c7ffe505c70048
05c7000b038d0049038d0049038d0049038d0049038d0049038d0049038d
0046038d004c038d004c038d004c038d004c0239003c0239003c0239000d
023900020400000c04000045040000450400004504000045040000450400
00020400000204000002040000020400006503330062040000810400003d
0400009c02cd007003a0fff204000023061400450614004507d7001e02aa
00ec02aa003904640019071dffe805c7004905b400350464000804640018
0464001804000002049c008603f4004005b4002b0696002e0464003e0231
00000235fffa027b001d062500470556004904000027038d005902aa00e4
0483002404640053040000020464001e04e5001a04000040040000400800
00e605c7000e05c7000e05c70048071d004b05c700430400ffee0800ffed
038d0043038d004302aa00b902aa00c10464001703f4002f0400000c05c7
00130156feab0400ffe902aa007702aa007304730019047300170400008b
0200009102aa00c1038d00430800004105c7000e04e3002a05c7001004e3
002a04e3002a02aa003302aa003202aa003202aa003205c7004805c70048
05c7004805c7000b05c7000b05c7000b0239003c02aa003c02aa001602aa
001702aa003702aa00e902aa009602aa00bb02aa004e02aa009402aa003c
04e300160239001e0473007e031d006404e3001a038d0029019a00a105c7
00230400004405c700130400000c047300240400fff904830025048300a5
02660088026600140266002c06000086060000860600002a0400002105c7
00480400003d02aa003304730080031d00640556004a038d00460556004a
038d0046040000260400ffef02aa01ef05c70010038d004905c70010038d
004905c70023052c004405c7002304e3002a038d004c04e3002a038d004c
04e300290239003d04e300290340003c04e3002902c0003605c7ffe50400
000c05c7ffe50400000c05c70048040000450556002302aa000d05560023
02aa000d04730080031d006404e3003e0239001404e3003e036b001305c7
000b0400000205c7000b0400000204e3001a038d002904e3001a038d0029
04a0002505c7004c05d900470431005703c50046035c0047045000460337
000c049e00450400ffef049500e40285000207c0002c0800004f04000099
0800004f040000990800004f040000980400009807d5016a05c700c00483
002604cd00990483002604d5022204d5010505abffe905ab027e05ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f04150040040000250600005505ab002f046b003b04d5
000301c00089035500a206ab003403d5006404d5009202d6008302d60083
04d500b202d6007005c70010038d00490556004a038d00460556004a038d
004604e3002a038d004c04e3002a038d004c04e3002a038d004c05c70048
0400003d05c700480400003d05c700480400003d05c700230400000d05c7
00230400000d02aa00160239ffde02aa00170239ffdf02aa00330239fffe
02aa003302390039031d002a0239ff6305c70022040000110400001104e3
00290239003d05c7ffe50400000c059d002603f5000c05c7004804000045
05c70048040000450556002302aa000d04730080031d006404e3003b0239
001005c7000b0400000205c7000b0400000205c7000b0400000205c7000e
04000002078d001b05c7000d05c700130400000c0239001605c7000f038d
0049071dffe80556004905c7004904000027023900b2078d001b05c7000d
078d001b05c7000d078d001b05c7000d05c700130400000c02aa00b802aa
ffdb0400003d04cd005a060000860600002a060000310600002502aa00c3
02aa00bb02aa00ec02aaffea05c70010058dff5c0677ff5c034aff5c05c7
ffb60687ff5c05f2ffb30227ffb105c70010055600220525003204e3002a
04e3001a05c7002302aa003305c7002205cd001c071d002205c7ffe50525
004f05c7004805c700250473002204a8002004e3003e05c7001305c7000f
05e7001805f2003c02aa003205c7001304310057035c0047042f000b0227
002503f6fffa0412006e0389000003500046042f000b03d5005102270025
0408001503e10019044a0074039effd3039100460400004503fe0059032b
004603f6fffa038d00180502001c0544004b0227000003f6fffa04000045
03f6fffa0544004b04e3002a0604003704a000250548004b0473008002aa
003302aa0032031d002a06fa000d06fa002705ee00360556002505aa001a
05c7002505c70010049800240556002204a000250575001a04e3002a072b
00120402002b05c7002505c7002505560025056d0012071d002205c70023
05c7004805c70025047300220556004a04e3003e05aa001a0652004c05c7
000f05c700250533fffa081200390812003905a6003606fa002504980024
0548003a083900260556ffee038d00490412004e03c700300348001f0412
001a038d004c05870017032900180448002e0448002e03e3002e03fe000c
0510002e0448002e040000450448002e0400fff9038d0046037f000c0400
000c052f00570400001b0448002e0406001e0629002e0629002e0423000c
0560002d03a6002e036f001b05fa002d03aeffff038d004c03dd00110348
001f036f0046031d00640239003c023900020239ff6305d1000c05c9002d
0400000d03e3002e0400000c0448002e039a002502cf001f0800004107a2
0010040a000d02aa010102aa001c02aa003202aa001202aa010202aa008f
02aa008f02aa008f02aa009002aa010202aa001c02aa010202aa012102d9
005602aa008f025400e002be02af02beff6b023900b003da005f03a40033
02af0021035a004303c5004e023b0043024a004e03d0005803ce00430222
0043039e0043037600330374000f040f006403e2004e0232004302700021
03cd005f03a2004303a200430386005803dc004303ae003d03ca006903c0
004304e200430400002104750043045d00430444004301ac006b02f9006b
06360096023bff9d039e0043039e00430374ff5b0374ff5b03a2003304e2
004304e2004304e2004304e2004303da005f03da005f03da005f03a40033
02af0021035a004303c5004e023b00430279000c03ce004302220043039e
0043037600330374000f03e2004e0270002103cd005f03a2004303860058
03ae003d03ca006903c0004304e2004304000021023b004303a400330376
0033038600580404000f0000ffdc0000ff250000ffdc0000fe51028d00ab
028d00a002da0043034d007901a8ffba019c004601e50046019c0046019c
004601ad0048019c004601b10046015100460435017c0435012e043500b7
043500810435012c043500be043500af043500810435009a043500db0435
0085028d00c1043500b3060001000600010002420036060001000435009e
04350098043500cb060001000600010006000100060001000600010001b1
004606000100060001000600010006000100060001000600010006000100
06000100051bffba06000100060001000600010005b5003a05b5003a01f4
ffba01f4ffba060001000600010006000100060001000481003604350036
043dffba043dffba03e9004a03e9004a067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba051b003204b5002406000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
01cf003001b1004601b1004601b1004001b1004606000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000400001b080000000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d007f028d005d0600010004ee0015034d007901a8000e01d6ffdc
01a8005601d60010037500320375003201a8002d01d60013051b003204b5
002401f4ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba
01f4ffba024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba02b3005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a
03e9004a0692003e0692003e043fffba043fffba0692003e0692003e043f
ffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e
06c5ffba06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a
039a00360435ffba0327ffba064f0027064f00270224ffba021affba04a7
004604a700460224ffba021affba04cf002d04cf002d0327ffba0327ffba
040d0047040d004701a8ffba01a8ffba02b4002302b400230327ffba0327
ffba043500450435004501f4ffba01f4ffba024200360300fff7039affba
0327ffba0375003203750032051b003204b50024051b003204b5002401f4
ffba01f4ffba045a004004ce0040045a002604ce0030045a005304ce0041
045a005304ce00410600010006000100019c0046019c0046060001000600
0100060001000151004601b10046060001000600010001ad004801e50046
06000100060001000600010001b1004601b1004601b1004601b1004601b1
004001cf003006000100019c0046019c0046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100028d00ca028d
00c7028d00c6060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000100ffba0800ffba1000ffba05c70048043b
00450635000b045600020000fdcc0000fc140000fd130000fe420000fce0
0000fdd40000fe620000fe2b0000fdb70000fc980000fd880000fc080000
fcfe0000feff0000ff030000fe9e041a00a206000088060000140000fe70
0000fdd40000fdf60000fd770000fe620000fdbb0000fbd80000fbd80000
fb740000fcfe0000fc8c0000fc460000fd270000fcb40000fca80000fcae
0000fc440000fe140000fe700000fd910000fc710000fdc30000fe470000
fe620000fcc30000fde10000fd870000fd4b0000fd970000fd4b0000fc8a
0000fc620000fc090000fbd70239003c05c70010038d004905c70010038d
004905c70010038d004905c70010038d004905c70010038d004905c70010
038d004905c70010038d004905c70010038d004905c70010038d004905c7
0010038d004905c70010038d004905c70010038d004904e3002a038d004c
04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3002a038d
004c04e3002a038d004c04e3002a038d004c04e3002a038d004c02aa0033
0239003c02aa00330239003c05c700480400004505c700480400004505c7
00480400004505c700480400004505c700480400004505c7004804000045
05c700480400004505c70048043b004505c70048043b004505c70048043b
004505c70048043b004505c70048043b004505c7000b0400000205c7000b
040000020635000b045600020635000b045600020635000b045600020635
000b045600020635000b0456000205c700130400000c05c700130400000c
05c700130400000c05c70010038d004902aa00330239000605c700480400
004505c7000b0400000205c7000b0400000205c7000b0400000205c7000b
0400000205c7000b040000020000ff090000ff090000ff090000ff0904a0
00230348001f072b0012058700170556002503e3002e0556002503e3002e
05c700230448002e05c700130400000205c700130400000205c7000f0400
001b0533fffa0406001e053300250400000d05c7002b038d004c05c70048
0400004505b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4
001001f4001b01f4001001f4006b01f4fff90227ffce01a8000f01a8fff5
02aa00a402aa00a401a8000e01a8005601a800560000ffcf01a8000f01d6
ffbf01a8fff501d6ffcd01a8001d01d6fff501a8009301d6001303750032
037500320375003203750032051b003204b5002405b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba02b3003202b3003202b3005f
02b3005f02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3
005f02b3005f02b3005f02b3005f02b3003802b3003802b3004902b30049
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a0692003e0692003e043fffba043fffba0692003e0692003e043f
ffba043fffba0692003e0692003e043fffba043fffba08c9003e08c9003e
06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7
ffba045a002a039a00360435ffba0327ffba064f0027064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba064f0027064f
00270224ffba021affba064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba04a7004604a7004604a7004604a70046067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327
ffba04cf002d04cf002d0327ffba0327ffba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba040d0047040d004701a8ffba01a8ffba040d0047040d
004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047
040d004701a8ffba01a8ffba043500450435004501f4ffba01f4ffba0435
0045043500450435004504350045043500450435004501f4ffba01f4ffba
04350045043500450481003604350036043dffba043dffba024200360300
fff7031a001a031a001a031a001a03750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032051bffba04b5ffba051b0032
04b5002401f4ffba01f4ffba0375003203750032051b003204b5002401f4
ffba01f4ffba051b003204b50024067f0045067f0045067f0045067f0045
01a800280000fe290000fea20000ff300000ff1d0000ff120000ff920000
fe7e08fc003208ad00320000ffb50000ffb60000feed0000ff640000fe7e
0000ff9f018d000002f6fffd0000fe820000ff1004cd00320000ff580000
ff580000ff640692003e0692003e043fffba043fffba08c9003e08c9003e
06c5ffba06c5ffba045a002a039a00360435ffba0327ffba034d007902b4
00230242003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b1
01f4006d067f001407760014022200430000fee702bc000004440043045a
fff504cefff5045a005304ce0041045a005304ce0041045a005304ce0041
045a005304ce0041045a005304ce0041045a005304ce0041043500710435
00ad045a000f04ce000f0000000000000076000000760000007600000076
000000760000007600000076000000760000007600000076000000760000
00fa0000017c0000017c0000017c0000017c0000017c0000017c0000017c
0000017c0000017c0000017c0000017c0000017c0000017c0000017c0000
017c0000017c0000017c0000017c0000017c0000017c0000017c0000017c
0000017c0000017c0000017c0000017c000002f6000002f6000002f60000
02f6000002f6000002f6000002f6000002f6000002f6000002f6000002f6
000002f6000002f6000002f60000047e0000071e00000a1800000a180000
0a1800000a1800000a1800000a1800000a1800000a1800000a1800000a18
00000a1800000a1800000a5400000a5400000e4e00001092000010920000
109200001092000010920000152a0000152a0000152a0000152a00001994
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000001b7000001b700000
1b7000001b7000001b7000001b7000001b7000001b7000001b7000001b70
00001b7000001b7000001b7000001b7000001b7000010000068a00f2003c
0076000700020010002f0056000005ca0f13000300020000000f00ba0000
00030000000000fe0000000000030000000700d800fe0001000000000000
007f01d600010000000000030018025500010000000000040018026d0001
000000000006001802850001000000000007006c029d0003000104090000
00fe03090003000104090001003004070003000104090002000e04370003
000104090003003004450003000104090004003004750003000104090006
003004a5000300010409000700d804d5000300010f000007006605ad0054
0079007000650066006100630065002000a900200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c0063002e002000440061007400610020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002f005400790070006500200053006f006c007500740069006f006e0073
00200049006e0063002e00200031003900390030002d0031003900390032
002e00200041006c006c0020005200690067006800740073002000520065
00730065007200760065006400540069006d006500730020004e00650077
00200052006f006d0061006e00ae002000540072006100640065006d0061
0072006b0020006f006600200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c006300200072006500670069007300740065007200650064
00200069006e002000740068006500200055005300200050006100740020
002600200054004d0020004f00660066002e00200061006e006400200065
006c0073006500770068006500720065002e547970656661636520a92054
6865204d6f6e6f7479706520436f72706f726174696f6e20706c632e2044
61746120a920546865204d6f6e6f7479706520436f72706f726174696f6e
20706c632f5479706520536f6c7574696f6e7320496e632e20313939302d
313939322e20416c6c20526967687473205265736572766564484f444d48
482b54696d65734e6577526f6d616e50534d54484f444d48482b54696d65
734e6577526f6d616e50534d54484f444d48482b54696d65734e6577526f
6d616e50534d5454696d6573204e657720526f6d616ea82054726164656d
61726b206f6620546865204d6f6e6f7479706520436f72706f726174696f
6e20706c63207265676973746572656420696e2074686520555320506174
202620544d204f66662e20616e6420656c736577686572652e0054007900
7000650066006100630065002000a900200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e00200070006c0063002e00200044006100740061002000a900
200054006800650020004d006f006e006f00740079007000650020004300
6f00720070006f0072006100740069006f006e00200070006c0063002f00
5400790070006500200053006f006c007500740069006f006e0073002000
49006e0063002e00200031003900390030002d0031003900390032002e00
200041006c006c0020005200690067006800740073002000520065007300
6500720076006500640048004f0044004d00480048002b00540069006d00
650073004e006500770052006f006d0061006e00500053004d0054005200
6500670075006c006100720048004f0044004d00480048002b0054006900
6d00650073004e006500770052006f006d0061006e00500053004d005400
48004f0044004d00480048002b00540069006d00650073004e0065007700
52006f006d0061006e00500053004d00540048004f0044004d0048004800
2b00540069006d00650073004e006500770052006f006d0061006e005000
53004d005400540069006d006500730020004e0065007700200052006f00
6d0061006e00ae002000540072006100640065006d00610072006b002000
6f006600200054006800650020004d006f006e006f007400790070006500
200043006f00720070006f0072006100740069006f006e00200070006c00
630020007200650067006900730074006500720065006400200069006e00
200074006800650020005500530020005000610074002000260020005400
4d0020004f00660066002e00200061006e006400200065006c0073006500
770068006500720065002e00490061006e00500020005300750073006100
6e004c0020004700570061006400650020004d0069006b00650044007500
200047007200650067004800200045006c0069004b002000500050006100
74006800650020002600200052006f0062004e006f002e000000ba0054ff
c003e1b345453240b803e1b32b2e3240b803e1b2282932b9ffc003e1b21a
1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb2424232b9ff
c003deb2363832b9ffc003deb32a2d32df410a03de00ef03de000203de03
df0028001fffc003dfb3282e32f0410d03df0001037e000f0101001f00a0
03dd00b003dd0002004003dab32426329fbf03cc000103ca03c90064001f
ffc003c9b20d1132410a03c703b70012001f03b603b50064001fffc003b5
b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d000400
6f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f03a700
4f03a7000403ab03ab00ef03a50001000f03a5002f03a5006f03a5008f03
a50004005403aa0001006b03aa000103a8036a0022001f038c0394001500
1f038b03930015001f03a40393001a001f03a20394001e001f03a1039300
1e001f039f0394001e001f039b0394001a001f039a0393001e001f039903
940016001f039803940016001f03970393001b001f03960394001b001f03
950393001b001f03760375001a001f03740375001a001f03a00373b21e1f
10411e039300200393003003930003002003940030039400400394000300
00039400010383036c001e001f03b1036c0032001f036d036c0032001fff
c0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c0037d00
d0037d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c00b003
7c00c0037c00d0037c000400300373004003730002000003730010037300
200373000300e0037300f00373000200b0037300c0037300d00373000300
8403730090037300a0037300030377036a0029001f0389036ab2281f40b8
0367b33940323fbb0366000100400366b3191d328fbb0366000100400366
b3090a3240b80366b3090e3240b80366b3090f323fbb0365000100400365
b3090c3240b80365b31a1d3240b80365b3090e326b410e0363007b036300
020014036300240363003403630044036300040363b2242f1fba034e006d
0800400e1f7f027f037f047f050430440112bf033200500800001f001203
2d003c080040291f5f3c0137600970098009031009200930094009500905
6f037f038f03031f032f033f034f035f0305b8ffc0b2073a33b8ffc04047
063a33900ba00bb00bc00bd00b05b006c006d006e006f006052006300640
0650066006700680069006a006099006900702600b700b800b03100b200b
300b400b500b051f0701a041850362000100000362001003620070036200
900362000400f0035f00010020035e0020035f0030035f0040035e000400
00035e0000035f0010035f00d0035e00e0035f00050010030f0020030f00
30030f00d0030f00e0030f00050000030f0010030f0050030f0060030f00
70030f00d0030f00060000030f0010030f0020030f0030030f00e0030f00
f0030f0006030f00270000030e0030030e000200e0030e00f0030e000203
0e004a00e0030d00f0030d0002030d002700d002fc0001001002fc002002
fc005002fc000300d002fc00e002fc0002000002fc001002fc002002fc00
3002fc005002fc006002fc000600e002fc00f002fc0002002002fc003002
fc004002fc000302fc406127c02901b02901a02901902901403c3f413240
223f41321212125f235f255f285fa5046f236f256f286fa5044f234f254f
284fa5043f233f253f283fa5042f232f252f282fa5041f231f251f281fa5
048f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3
b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f02af00df
02af0003001f02af002f02af003f02af006f02af000402af02af001f02ad
002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02ad001f
02ad003f02ad005f02ad009f02ad0005005f02ad00df02ad0002000f02ad
001f02ad003f02ad0003004002acb23a334f414a02ac005f02ac009f02ac
0003002f02ac003f02ac0002000f02ac003f02ac00af02ac000300b002ac
00e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f02ac003f
02ac0003000f035a0001000f035a001f035a003f035a005f035a0070035a
000500cf035700df03570002000f0357001f03570070035700af03570004
035a035a0357035702ad02ad02ac02ac032c400d31151f00161600000012
1108104110020c004a000d01a8004a000d0198004a000d0189004a000d01
3f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe02280041000d
01940041000d0121400b410db4410d4f410d29410d411002170021000d02
150021000d02060021000d01eb0021000d014e0021000d012c4014210df9
210df3210df1210d9d210d71210d3d210d4110021c001f000d0214001f00
0d020b001f000d0196001f000d014a001f000d0126400b1f0dc61f0d571f
0d371f0d410d019e0141000d00420141000d001e0141000d001b0141000d
01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c291fb801
ffb23c411fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc01f901
0f0101001f01f6b224e41f411501f401490401001f01f301490401001f01
f1014900ab001f01f001490067001f01a6003c0125001f01a4b23c811f41
1501a3010f019a001f01a200220801001f01a100500401001f019f014901
9a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a002c01
01001f0197b22ce41fb80193b22c891fb80192b22c6c1fb8018fb2259e1f
b8016ab23c2a1f4111016700240201001f0163002502ab001f014c010f01
9a001f01480149006c001f0147b22c891fb80145b22c9e1fb80144b22c79
1fb80143b223311fb80127b23c811fbc012300500101001f011fb223e41f
4115011d0023019a001f011c00230801001f011b00250801001f010e010f
0401001f010d00220401001f0108b223811fb80106b425e41ff73cbb0125
001f00f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b901490401
b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21fbf2cb8
0201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21fa523b8
0201400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f006d01
0f0156400b1f592c3e1f4c3cab1f4625b80101b21f403cb80125400a1f3a
23721f393cab1f38b80149b3ab1f3124b80401b21f3025b802abb61f2a24
e41f2623b80156b21f5537ba023500070175402c0774076207560751073b
0733072d0720071d071c071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b013034b024b5342
01b0124b004b5442b0372b4bb807ff52b0382b4bb008505b58b101018e59
b0382bb00288b801005458b801ffb101018e851bb0124358b90001012f85
8d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a515ab0
052342180016763f183f123e113946443e113946443e113946443e113946
443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594bb0
4753205c58b90271026f4544b90270026f45445958b9017a0271455258b9
0271017a4459594bb04753205c58b9002202704544b9003c027045445958
b901b30022455258b9002201b34459594bb04c53205c58b9014900224544
b1222245445958b901c20149455258b9014901c24459594bb06753205c58
b9002402714544b90050027145445958b9021e0024455258b90024021e44
59594bb8020153205c58b9010f00224544b1222245445958b90c00010f45
5258b9010f0c004459594bb01c53205c58b125254544b12c2545445958b1
3725455258b125374459594bb0ab53205c58b125254544b1232545445958
b901590025455258b9002501594459594bb8010153205c58b125254544b1
282545445958b902080025455258b9002502084459592b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc6463
456523456023456560234560b08b766818b080622020b164dc4565234520
b003266062636820b003266165b0dc236544b064234420b1616345652345
20b003266062636820b003266165b063236544b0612344b10063455458b1
63406544b26140614523614459b3a67f434b456523456023456560234560
b089766818b080622020b1437f4565234520b003266062636820b0032661
65b07f236544b043234420b1a64b4565234520b003266062636820b00326
6165b04b236544b0a62344b1004b455458b14b406544b2a640a645236144
594b5242014b5058b108004259435c58b108004259b3020b0a124358601b
2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342
b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f23
42b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b
0018456944456944456944456944737373747373737475752b7373747475
184569447373742b4bb021534bb046515a58b03cb03c45b040604459012b
2b2b2b757575757575757543584010bf3ccf3c026f3c7f3c8f3c9f3caf3c
0575755943584012bf22cf22025f226f227f228f229f22af220675755943
5c58b6403c9f22ef220375592b2b01747474744544737374747575454473
454473744544737475737373737300757575737575752b2b757575752b75
2b435841220063032d00010003032d0013032d0023032d0033032d005303
2d000500c3032d00d3032d00e3032d00f3032d00040083032d0093032d00
a3032d00b3032d0004032d032d4518694474747575592b4358b900180332
b330353238b80332b361663238b80332b3535a3238b80332b3454e3238b8
0332b33c413218b80332b23f330a410f0332000100ba033200ca033200da
033200ea033200fa03320005033203324518694474752b2b2b2b2b2b5973
00732b012b7575002b2b2b74002b2b2b732b74012b002b2b017373737474
732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b00017375007373004569440073730173742b2b2b2b2b732b0073
2b752b2b732b2b2b2b2b2b2b2b2b2b0000>
[7025 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N29/HODMHH+TimesNewRomanPSMT 1 TZ
195.0 591.0 249.0 100.0 re
W
n
n
323.160034 681.0 m
323.160034 682.5 l
0.720001 w
S
1.0 w
n
323.519989 682.5 m
334.679993 682.5 l
336.359985 682.440002 l
336.300018 682.440002 l
337.139984 682.440002 l
338.039978 682.320007 l
337.97998 682.320007 l
338.820007 682.26001 l
338.940002 682.26001 l
339.839996 682.079956 l
339.899994 682.079956 l
340.919983 681.779968 l
341.880005 681.47998 l
342.0 681.419983 l
342.359985 681.23999 l
342.300018 681.23999 l
342.839996 681.0 l
342.899994 681.0 l
343.73999 680.519958 l
344.519989 680.100037 l
345.300018 679.679993 l
345.359985 679.619995 l
346.019989 679.200012 l
346.619995 678.779968 l
347.100006 678.47998 l
347.160004 678.419983 l
347.579987 678.059998 l
347.579987 678.119995 l
348.059998 677.76001 l
348.0 677.76001 l
348.300018 677.579956 l
348.359985 677.579956 l
348.600006 677.400024 l
348.660004 677.339966 l
348.839996 677.159973 l
348.899994 677.100037 l
349.200012 676.73999 l
349.73999 676.140015 l
349.679993 676.140015 l
350.339996 675.419983 l
350.399994 675.359985 l
351.0 674.579956 l
351.600006 673.73999 l
352.259979 672.839966 l
352.919983 671.940002 l
351.720001 671.039978 l
350.399994 672.839966 l
349.800018 673.679993 l
349.200012 674.459961 l
349.259979 674.400024 l
348.600006 675.119995 l
348.059998 675.719971 l
348.059998 675.779968 l
347.759979 676.140015 l
347.759979 676.079956 l
347.579987 676.26001 l
347.700012 676.200012 l
347.459991 676.380005 l
347.519989 676.320007 l
347.220001 676.5 l
347.160004 676.559998 l
346.679993 676.919983 l
346.619995 676.919983 l
346.200012 677.279968 l
346.320007 677.219971 l
345.839996 677.519958 l
345.779999 677.579956 l
345.179993 678.0 l
345.23999 677.940002 l
344.579987 678.359985 l
343.800018 678.779968 l
343.019989 679.200012 l
342.179993 679.679993 l
342.23999 679.619995 l
341.700012 679.859985 l
341.700012 679.919983 l
341.339996 680.100037 l
341.459991 680.039978 l
340.5 680.339966 l
339.47998 680.640015 l
339.539978 680.579956 l
338.639984 680.76001 l
338.700012 680.76001 l
337.859985 680.820007 l
336.959991 680.940002 l
337.019989 680.940002 l
336.300018 680.940002 l
334.619995 681.0 l
323.519989 681.0 l
f
n
352.919983 671.940002 m
353.519989 671.100037 l
353.579987 671.039978 l
352.320007 670.26001 l
352.320007 670.200012 l
351.720001 671.039978 l
f
n
354.059998 670.26001 m
354.419983 669.659973 l
353.160004 668.880005 l
352.800018 669.47998 l
f
n
353.579987 671.039978 m
352.320007 670.26001 l
352.800018 669.47998 l
354.059998 670.26001 l
f
n
323.160034 657.179993 m
323.160034 658.679993 l
0.720001 w
S
1.0 w
n
323.519989 658.679993 m
336.300018 658.679993 l
336.23999 658.679993 l
336.959991 658.73999 l
337.859985 658.799988 l
337.800018 658.799988 l
338.639984 658.919983 l
338.700012 658.919983 l
339.600006 659.039978 l
339.47998 659.039978 l
340.5 659.339966 l
340.440002 659.279968 l
341.399994 659.640015 l
341.399994 659.700012 l
341.759979 659.820007 l
341.639984 659.76001 l
342.179993 660.059998 l
342.23999 660.059998 l
343.079987 660.47998 l
343.019989 660.47998 l
343.800018 660.900024 l
343.800018 660.839966 l
344.579987 661.320007 l
344.579987 661.380005 l
345.23999 661.73999 l
345.179993 661.679993 l
345.779999 662.100037 l
346.259979 662.459961 l
346.200012 662.400024 l
346.619995 662.76001 l
346.73999 662.820007 l
347.220001 663.119995 l
347.100006 663.119995 l
347.399994 663.359985 l
347.459991 663.359985 l
347.700012 663.539978 l
347.579987 663.47998 l
347.759979 663.659973 l
348.059998 663.959961 l
348.059998 663.900024 l
348.600006 664.5 l
349.259979 665.219971 l
349.200012 665.159973 l
349.800018 665.940002 l
350.399994 666.779968 l
351.720001 668.579956 l
352.97998 667.73999 l
352.919983 667.679993 l
351.600006 665.880005 l
351.0 665.039978 l
350.399994 664.26001 l
350.339996 664.200012 l
349.679993 663.47998 l
349.73999 663.47998 l
349.200012 662.880005 l
349.139984 662.880005 l
348.839996 662.579956 l
348.660004 662.400024 l
348.600006 662.339966 l
348.359985 662.159973 l
348.059998 661.919983 l
348.0 661.859985 l
347.519989 661.559998 l
347.579987 661.619995 l
347.160004 661.26001 l
346.679993 660.900024 l
346.619995 660.900024 l
346.019989 660.47998 l
345.959991 660.419983 l
345.300018 660.059998 l
345.359985 660.059998 l
344.579987 659.579956 l
344.519989 659.579956 l
343.73999 659.159973 l
342.899994 658.73999 l
342.359985 658.440002 l
342.23999 658.380005 l
341.880005 658.26001 l
341.940002 658.26001 l
340.97998 657.900024 l
340.919983 657.900024 l
339.899994 657.600037 l
339.779999 657.539978 l
338.880005 657.419983 l
338.039978 657.299988 l
337.97998 657.299988 l
337.079987 657.23999 l
336.359985 657.179993 l
323.519989 657.179993 l
f
n
351.720001 668.579956 m
352.320007 669.47998 l
352.320007 669.419983 l
353.579987 668.640015 l
352.97998 667.73999 l
f
n
352.800018 670.200012 m
353.160004 670.799988 l
354.419983 670.019958 l
354.059998 669.419983 l
f
n
352.320007 669.419983 m
353.579987 668.640015 l
354.059998 669.419983 l
352.800018 670.200012 l
f
n
324.0 681.779968 m
323.940002 682.019958 l
323.759979 682.26001 l
323.519989 682.440002 l
323.220001 682.5 l
322.97998 682.440002 l
322.73999 682.26001 l
322.559998 682.019958 l
322.5 681.779968 l
322.559998 681.47998 l
322.73999 681.23999 l
322.97998 681.059998 l
323.220001 681.0 l
323.519989 681.059998 l
323.759979 681.23999 l
323.940002 681.47998 l
324.0 681.779968 l
f
n
323.880005 682.140015 m
324.600006 680.76001 l
324.600006 680.700012 l
324.779999 680.339966 l
325.019989 679.859985 l
325.079987 679.799988 l
325.380005 679.019958 l
325.380005 679.079956 l
325.73999 678.23999 l
325.73999 678.179993 l
326.039978 677.279968 l
326.039978 677.219971 l
326.339996 676.26001 l
326.339996 676.320007 l
326.639984 675.419983 l
326.639984 675.359985 l
326.880005 674.459961 l
326.880005 674.519958 l
327.059998 673.97998 l
327.179993 673.619995 l
327.23999 673.380005 l
327.23999 673.079956 l
327.23999 673.140015 l
327.300018 672.659973 l
327.359985 671.940002 l
327.300018 672.0 l
327.419983 671.459961 l
327.47998 671.459961 l
327.539978 671.159973 l
327.539978 671.039978 l
326.039978 671.039978 l
326.039978 670.859985 l
325.97998 671.159973 l
325.859985 671.700012 l
325.859985 671.820007 l
325.800018 672.539978 l
325.800018 672.47998 l
325.73999 672.959961 l
325.73999 673.380005 l
325.73999 673.140015 l
325.619995 673.5 l
325.440002 674.039978 l
325.440002 674.100037 l
325.200012 675.0 l
325.200012 674.940002 l
324.899994 675.839966 l
324.600006 676.799988 l
324.300018 677.700012 l
324.359985 677.640015 l
324.0 678.47998 l
323.700012 679.26001 l
323.700012 679.200012 l
323.279999 680.039978 l
322.559998 681.419983 l
f
n
327.539978 671.039978 m
327.539978 670.73999 l
326.039978 670.859985 l
326.039978 670.799988 l
326.039978 671.039978 l
f
n
327.47998 669.839966 m
327.419983 670.079956 l
327.23999 670.320007 l
327.0 670.5 l
326.700012 670.559998 l
326.459991 670.5 l
326.220001 670.320007 l
326.039978 670.079956 l
325.97998 669.839966 l
326.039978 669.539978 l
326.220001 669.299988 l
326.459991 669.119995 l
326.700012 669.059998 l
327.0 669.119995 l
327.23999 669.299988 l
327.419983 669.539978 l
327.47998 669.839966 l
f
n
327.539978 670.73999 m
326.039978 670.859985 l
325.97998 669.900024 l
327.47998 669.779968 l
f
n
324.0 657.959961 m
323.940002 658.200012 l
323.759979 658.440002 l
323.519989 658.619995 l
323.220001 658.679993 l
322.97998 658.619995 l
322.73999 658.440002 l
322.559998 658.200012 l
322.5 657.959961 l
322.559998 657.659973 l
322.73999 657.419983 l
322.97998 657.23999 l
323.220001 657.179993 l
323.519989 657.23999 l
323.759979 657.419983 l
323.940002 657.659973 l
324.0 657.959961 l
f
n
322.559998 658.320007 m
323.279999 659.640015 l
323.279999 659.579956 l
323.459991 660.0 l
323.459991 660.059998 l
323.700012 660.47998 l
323.700012 660.359985 l
324.0 661.140015 l
324.359985 662.039978 l
324.300018 662.039978 l
324.600006 662.940002 l
324.899994 663.839966 l
325.200012 664.73999 l
325.200012 664.679993 l
325.440002 665.579956 l
325.440002 665.640015 l
325.619995 666.179993 l
325.73999 666.539978 l
325.73999 666.299988 l
325.73999 666.779968 l
325.800018 667.200012 l
325.800018 667.140015 l
325.859985 667.919983 l
325.859985 668.039978 l
325.97998 668.519958 l
325.97998 668.459961 l
326.039978 668.76001 l
326.039978 668.640015 l
327.539978 668.640015 l
327.539978 668.459961 l
327.47998 668.159973 l
327.419983 668.159973 l
327.300018 667.679993 l
327.359985 667.799988 l
327.300018 667.019958 l
327.300018 666.959961 l
327.23999 666.539978 l
327.23999 666.659973 l
327.23999 666.299988 l
327.179993 666.059998 l
327.059998 665.700012 l
326.880005 665.159973 l
326.880005 665.219971 l
326.639984 664.320007 l
326.639984 664.26001 l
326.339996 663.359985 l
326.039978 662.459961 l
325.73999 661.559998 l
325.73999 661.5 l
325.380005 660.600037 l
325.079987 659.820007 l
325.019989 659.76001 l
324.779999 659.339966 l
324.839996 659.400024 l
324.660004 658.97998 l
324.600006 658.919983 l
323.880005 657.600037 l
f
n
326.039978 668.640015 m
326.039978 668.880005 l
326.039978 668.820007 l
327.539978 668.880005 l
327.539978 668.640015 l
f
n
327.47998 669.900024 m
327.419983 670.140015 l
327.23999 670.380005 l
327.0 670.559998 l
326.700012 670.619995 l
326.459991 670.559998 l
326.220001 670.380005 l
326.039978 670.140015 l
325.97998 669.900024 l
326.039978 669.600037 l
326.220001 669.359985 l
326.459991 669.179993 l
326.700012 669.119995 l
327.0 669.179993 l
327.23999 669.359985 l
327.419983 669.600037 l
327.47998 669.900024 l
f
n
326.039978 668.820007 m
327.539978 668.880005 l
327.47998 669.900024 l
325.97998 669.839966 l
f
n
323.160034 624.299988 m
323.160034 625.799988 l
0.720001 w
S
1.0 w
n
323.519989 625.799988 m
334.679993 625.799988 l
336.359985 625.73999 l
336.300018 625.73999 l
337.079987 625.73999 l
337.97998 625.679993 l
338.039978 625.679993 l
338.880005 625.559998 l
338.940002 625.559998 l
339.839996 625.380005 l
339.899994 625.380005 l
340.919983 625.079956 l
341.880005 624.779968 l
342.0 624.719971 l
342.359985 624.539978 l
342.300018 624.539978 l
342.839996 624.299988 l
342.899994 624.299988 l
343.73999 623.880005 l
343.800018 623.820007 l
344.579987 623.339966 l
344.519989 623.400024 l
345.300018 622.97998 l
345.359985 622.919983 l
346.019989 622.5 l
346.619995 622.140015 l
346.679993 622.140015 l
347.160004 621.779968 l
347.160004 621.719971 l
347.579987 621.359985 l
347.579987 621.419983 l
348.059998 621.059998 l
348.0 621.059998 l
348.300018 620.880005 l
348.359985 620.880005 l
348.600006 620.700012 l
348.899994 620.400024 l
349.200012 620.039978 l
349.73999 619.440002 l
349.679993 619.440002 l
350.339996 618.719971 l
350.399994 618.659973 l
351.0 617.880005 l
351.600006 617.039978 l
352.259979 616.200012 l
352.320007 616.200012 l
352.97998 615.23999 l
352.919983 615.23999 l
351.720001 614.339966 l
351.720001 614.400024 l
351.059998 615.359985 l
351.059998 615.299988 l
350.399994 616.140015 l
349.800018 616.97998 l
349.200012 617.76001 l
349.259979 617.700012 l
348.600006 618.419983 l
348.059998 619.019958 l
348.059998 619.079956 l
347.759979 619.440002 l
347.759979 619.380005 l
347.579987 619.559998 l
347.700012 619.5 l
347.459991 619.679993 l
347.519989 619.619995 l
347.220001 619.799988 l
347.160004 619.859985 l
346.679993 620.219971 l
346.619995 620.219971 l
346.200012 620.579956 l
346.259979 620.579956 l
345.779999 620.940002 l
345.839996 620.880005 l
345.23999 621.23999 l
344.579987 621.659973 l
343.800018 622.079956 l
343.019989 622.559998 l
343.079987 622.559998 l
342.23999 622.97998 l
342.23999 622.919983 l
341.700012 623.159973 l
341.700012 623.219971 l
341.339996 623.400024 l
341.459991 623.339966 l
340.5 623.640015 l
339.47998 623.940002 l
339.539978 623.880005 l
338.639984 624.059998 l
337.800018 624.179993 l
337.859985 624.179993 l
336.959991 624.23999 l
337.019989 624.23999 l
336.300018 624.23999 l
334.619995 624.299988 l
323.519989 624.299988 l
f
n
352.919983 615.23999 m
353.519989 614.400024 l
353.579987 614.339966 l
352.320007 613.559998 l
352.320007 613.5 l
351.720001 614.339966 l
f
n
354.059998 613.559998 m
354.419983 612.959961 l
353.160004 612.179993 l
352.800018 612.779968 l
f
n
353.579987 614.339966 m
352.320007 613.559998 l
352.800018 612.779968 l
354.059998 613.559998 l
f
n
323.160034 600.47998 m
323.160034 601.97998 l
0.720001 w
S
1.0 w
n
323.519989 601.97998 m
336.300018 601.97998 l
336.23999 601.97998 l
336.959991 602.039978 l
337.859985 602.100037 l
337.800018 602.100037 l
338.639984 602.219971 l
339.539978 602.400024 l
339.47998 602.400024 l
340.5 602.640015 l
340.440002 602.579956 l
341.399994 602.940002 l
341.339996 602.940002 l
341.700012 603.119995 l
342.23999 603.359985 l
343.079987 603.779968 l
343.019989 603.779968 l
343.800018 604.200012 l
343.800018 604.140015 l
344.579987 604.619995 l
345.23999 605.039978 l
345.839996 605.400024 l
345.779999 605.400024 l
346.259979 605.76001 l
346.200012 605.700012 l
346.619995 606.059998 l
346.73999 606.119995 l
347.220001 606.419983 l
347.100006 606.419983 l
347.399994 606.659973 l
347.459991 606.659973 l
347.700012 606.839966 l
347.579987 606.779968 l
347.759979 606.959961 l
347.759979 606.900024 l
348.059998 607.26001 l
348.059998 607.320007 l
348.600006 607.859985 l
348.600006 607.799988 l
349.259979 608.519958 l
349.200012 608.459961 l
349.800018 609.23999 l
350.399994 610.140015 l
351.059998 610.97998 l
351.720001 611.880005 l
352.97998 611.039978 l
352.919983 610.97998 l
352.259979 610.079956 l
351.600006 609.23999 l
351.660004 609.299988 l
351.059998 608.400024 l
351.0 608.339966 l
350.399994 607.559998 l
350.339996 607.5 l
349.679993 606.779968 l
349.139984 606.23999 l
349.200012 606.299988 l
348.899994 605.940002 l
348.600006 605.640015 l
348.359985 605.459961 l
348.059998 605.219971 l
348.0 605.159973 l
347.519989 604.859985 l
347.579987 604.919983 l
347.160004 604.559998 l
346.679993 604.200012 l
346.619995 604.140015 l
346.019989 603.779968 l
345.359985 603.359985 l
344.579987 602.880005 l
344.519989 602.880005 l
343.73999 602.459961 l
342.899994 602.039978 l
342.839996 601.97998 l
342.300018 601.73999 l
342.359985 601.799988 l
342.0 601.619995 l
341.940002 601.559998 l
340.97998 601.200012 l
340.859985 601.200012 l
339.839996 600.959961 l
339.839996 600.900024 l
338.940002 600.719971 l
338.880005 600.719971 l
338.039978 600.600037 l
337.97998 600.600037 l
337.079987 600.539978 l
336.359985 600.47998 l
323.519989 600.47998 l
f
n
351.720001 611.880005 m
352.320007 612.779968 l
352.320007 612.719971 l
353.579987 611.940002 l
352.97998 611.039978 l
f
n
352.800018 613.5 m
353.160004 614.100037 l
354.419983 613.320007 l
354.059998 612.719971 l
f
n
352.320007 612.719971 m
353.579987 611.940002 l
354.059998 612.719971 l
352.800018 613.5 l
f
n
324.0 625.079956 m
323.940002 625.320007 l
323.759979 625.559998 l
323.519989 625.73999 l
323.220001 625.799988 l
322.97998 625.73999 l
322.73999 625.559998 l
322.559998 625.320007 l
322.5 625.079956 l
322.559998 624.779968 l
322.73999 624.539978 l
322.97998 624.359985 l
323.220001 624.299988 l
323.519989 624.359985 l
323.759979 624.539978 l
323.940002 624.779968 l
324.0 625.079956 l
f
n
323.880005 625.440002 m
324.600006 624.059998 l
324.600006 624.0 l
325.019989 623.159973 l
325.079987 623.159973 l
325.380005 622.440002 l
325.380005 622.380005 l
325.73999 621.47998 l
326.039978 620.579956 l
326.339996 619.679993 l
326.339996 619.619995 l
326.639984 618.659973 l
326.880005 617.76001 l
326.880005 617.820007 l
327.179993 616.919983 l
327.23999 616.679993 l
327.23999 616.380005 l
327.23999 616.440002 l
327.300018 615.959961 l
327.359985 615.23999 l
327.300018 615.299988 l
327.419983 614.76001 l
327.419983 614.820007 l
327.47998 614.579956 l
327.539978 614.400024 l
326.039978 614.400024 l
326.039978 614.219971 l
325.97998 614.459961 l
325.859985 615.0 l
325.859985 615.119995 l
325.800018 615.839966 l
325.800018 615.779968 l
325.73999 616.26001 l
325.73999 616.679993 l
325.73999 616.440002 l
325.619995 616.799988 l
325.440002 617.339966 l
325.440002 617.400024 l
325.200012 618.299988 l
325.200012 618.23999 l
324.899994 619.200012 l
324.600006 620.100037 l
324.300018 621.0 l
324.359985 620.940002 l
324.0 621.839966 l
323.700012 622.559998 l
323.700012 622.5 l
323.279999 623.339966 l
322.559998 624.719971 l
f
n
327.539978 614.400024 m
327.539978 614.039978 l
326.039978 614.159973 l
326.039978 614.100037 l
326.039978 614.400024 l
f
n
327.47998 613.140015 m
327.419983 613.380005 l
327.23999 613.619995 l
327.0 613.799988 l
326.700012 613.859985 l
326.459991 613.799988 l
326.220001 613.619995 l
326.039978 613.380005 l
325.97998 613.140015 l
326.039978 612.839966 l
326.220001 612.600037 l
326.459991 612.419983 l
326.700012 612.359985 l
327.0 612.419983 l
327.23999 612.600037 l
327.419983 612.839966 l
327.47998 613.140015 l
f
n
327.539978 614.039978 m
326.039978 614.159973 l
325.97998 613.200012 l
327.47998 613.079956 l
f
n
324.0 601.26001 m
323.940002 601.5 l
323.759979 601.73999 l
323.519989 601.919983 l
323.220001 601.97998 l
322.97998 601.919983 l
322.73999 601.73999 l
322.559998 601.5 l
322.5 601.26001 l
322.559998 600.959961 l
322.73999 600.719971 l
322.97998 600.539978 l
323.220001 600.47998 l
323.519989 600.539978 l
323.759979 600.719971 l
323.940002 600.959961 l
324.0 601.26001 l
f
n
322.559998 601.619995 m
323.279999 602.940002 l
323.279999 602.880005 l
323.459991 603.299988 l
323.459991 603.359985 l
323.700012 603.779968 l
323.700012 603.659973 l
324.0 604.440002 l
324.359985 605.339966 l
324.300018 605.339966 l
324.600006 606.23999 l
324.899994 607.140015 l
325.200012 608.039978 l
325.200012 607.97998 l
325.440002 608.880005 l
325.440002 608.940002 l
325.619995 609.47998 l
325.73999 609.839966 l
325.73999 609.600037 l
325.73999 610.019958 l
325.800018 610.5 l
325.859985 611.219971 l
325.859985 611.339966 l
325.97998 611.820007 l
325.97998 611.76001 l
326.039978 612.059998 l
326.039978 611.940002 l
327.539978 611.940002 l
327.539978 611.76001 l
327.47998 611.459961 l
327.419983 611.459961 l
327.300018 610.97998 l
327.359985 611.100037 l
327.300018 610.380005 l
327.300018 610.320007 l
327.23999 609.839966 l
327.23999 609.959961 l
327.23999 609.600037 l
327.179993 609.359985 l
326.880005 608.459961 l
326.880005 608.519958 l
326.639984 607.619995 l
326.639984 607.559998 l
326.339996 606.659973 l
326.039978 605.76001 l
325.73999 604.859985 l
325.73999 604.799988 l
325.380005 603.900024 l
325.079987 603.119995 l
325.019989 603.059998 l
324.779999 602.640015 l
324.839996 602.700012 l
324.660004 602.279968 l
324.600006 602.219971 l
323.880005 600.900024 l
f
n
326.039978 611.940002 m
326.039978 612.179993 l
326.039978 612.119995 l
327.539978 612.179993 l
327.539978 611.940002 l
f
n
327.47998 613.200012 m
327.419983 613.440002 l
327.23999 613.679993 l
327.0 613.859985 l
326.700012 613.919983 l
326.459991 613.859985 l
326.220001 613.679993 l
326.039978 613.440002 l
325.97998 613.200012 l
326.039978 612.900024 l
326.220001 612.659973 l
326.459991 612.47998 l
326.700012 612.419983 l
327.0 612.47998 l
327.23999 612.659973 l
327.419983 612.900024 l
327.47998 613.200012 l
f
n
326.039978 612.119995 m
327.539978 612.179993 l
327.47998 613.200012 l
325.97998 613.140015 l
f
n
359.189972 669.539978 m
359.189972 670.139954 l
0.299988 w
S
1.0 w
n
359.339996 669.839966 m
395.76001 669.839966 l
0.599976 w
S
1.0 w
n
359.009979 612.839966 m
359.009979 613.439941 l
0.299988 w
S
1.0 w
n
359.160004 613.139954 m
395.76001 613.139954 l
0.599976 w
S
1.0 w
n
310.439972 663.359985 m
310.439972 663.659973 l
0.599976 w
S
1.0 w
n
310.73999 663.359985 m
310.73999 648.600037 l
310.380005 648.299988 l
310.139984 648.359985 l
310.139984 663.359985 l
f
n
310.5 648.900024 m
374.279999 634.73999 l
374.519989 634.679993 l
374.519989 634.440002 l
374.160004 634.140015 l
310.380005 648.299988 l
f
n
374.219971 612.839966 m
374.219971 634.439941 l
0.599976 w
S
1.0 w
n
310.439972 619.919983 m
310.439972 620.219971 l
0.599976 w
S
1.0 w
n
310.139984 620.219971 m
310.139984 634.679993 l
310.380005 634.73999 l
310.73999 634.440002 l
310.73999 620.219971 l
f
n
310.380005 634.73999 m
374.160004 648.900024 l
374.519989 648.600037 l
374.519989 648.359985 l
374.279999 648.299988 l
310.5 634.140015 l
f
n
374.219971 648.600037 m
374.219971 670.140015 l
0.599976 w
S
1.0 w
n
375.23999 669.839966 m
375.179993 670.26001 l
374.940002 670.619995 l
374.639984 670.859985 l
374.220001 670.919983 l
373.800018 670.859985 l
373.440002 670.619995 l
373.200012 670.26001 l
373.139984 669.839966 l
373.200012 669.419983 l
373.440002 669.119995 l
373.800018 668.880005 l
374.220001 668.820007 l
374.639984 668.880005 l
374.940002 669.119995 l
375.179993 669.419983 l
375.23999 669.839966 l
eofill
n
374.940002 669.779968 m
374.880005 670.200012 l
374.940002 670.079956 l
374.700012 670.440002 l
374.759979 670.380005 l
374.459991 670.619995 l
374.639984 670.559998 l
374.220001 670.619995 l
374.279999 670.619995 l
373.859985 670.559998 l
373.97998 670.619995 l
373.619995 670.380005 l
373.679993 670.440002 l
373.440002 670.079956 l
373.5 670.200012 l
373.440002 669.779968 l
373.440002 669.839966 l
373.5 669.419983 l
373.440002 669.600037 l
373.679993 669.299988 l
373.619995 669.359985 l
373.97998 669.119995 l
373.859985 669.179993 l
374.279999 669.119995 l
374.220001 669.119995 l
374.639984 669.179993 l
374.459991 669.119995 l
374.759979 669.359985 l
374.700012 669.299988 l
374.940002 669.600037 l
374.880005 669.419983 l
374.940002 669.839966 l
375.539978 669.779968 l
375.47998 669.359985 l
375.419983 669.23999 l
375.179993 668.940002 l
375.119995 668.880005 l
374.819977 668.640015 l
374.700012 668.579956 l
374.279999 668.519958 l
374.220001 668.519958 l
373.800018 668.579956 l
373.619995 668.640015 l
373.259979 668.880005 l
373.200012 668.940002 l
372.959991 669.23999 l
372.899994 669.359985 l
372.839996 669.779968 l
372.839996 669.839966 l
372.899994 670.26001 l
372.959991 670.440002 l
373.200012 670.799988 l
373.259979 670.859985 l
373.619995 671.100037 l
373.800018 671.159973 l
374.220001 671.219971 l
374.279999 671.219971 l
374.700012 671.159973 l
374.819977 671.100037 l
375.119995 670.859985 l
375.179993 670.799988 l
375.419983 670.440002 l
375.47998 670.26001 l
375.539978 669.839966 l
f
n
374.940002 669.839966 m
374.940002 669.779968 l
375.539978 669.839966 l
375.539978 669.779968 l
f
n
375.23999 613.140015 m
375.179993 613.559998 l
374.940002 613.919983 l
374.639984 614.159973 l
374.220001 614.219971 l
373.800018 614.159973 l
373.440002 613.919983 l
373.200012 613.559998 l
373.139984 613.140015 l
373.200012 612.719971 l
373.440002 612.419983 l
373.800018 612.179993 l
374.220001 612.119995 l
374.639984 612.179993 l
374.940002 612.419983 l
375.179993 612.719971 l
375.23999 613.140015 l
eofill
n
374.940002 613.079956 m
374.880005 613.5 l
374.940002 613.380005 l
374.700012 613.73999 l
374.759979 613.679993 l
374.459991 613.919983 l
374.639984 613.859985 l
374.220001 613.919983 l
374.279999 613.919983 l
373.859985 613.859985 l
373.97998 613.919983 l
373.619995 613.679993 l
373.679993 613.73999 l
373.440002 613.380005 l
373.5 613.5 l
373.440002 613.079956 l
373.440002 613.140015 l
373.5 612.719971 l
373.440002 612.900024 l
373.679993 612.600037 l
373.619995 612.659973 l
373.97998 612.419983 l
373.859985 612.47998 l
374.279999 612.419983 l
374.220001 612.419983 l
374.639984 612.47998 l
374.459991 612.419983 l
374.759979 612.659973 l
374.700012 612.600037 l
374.940002 612.900024 l
374.880005 612.719971 l
374.940002 613.140015 l
375.539978 613.079956 l
375.47998 612.659973 l
375.419983 612.539978 l
375.179993 612.23999 l
375.119995 612.179993 l
374.819977 611.940002 l
374.700012 611.880005 l
374.279999 611.820007 l
374.220001 611.820007 l
373.800018 611.880005 l
373.619995 611.940002 l
373.259979 612.179993 l
373.200012 612.23999 l
372.959991 612.539978 l
372.899994 612.659973 l
372.839996 613.079956 l
372.839996 613.140015 l
372.899994 613.559998 l
372.959991 613.73999 l
373.200012 614.100037 l
373.259979 614.159973 l
373.619995 614.400024 l
373.800018 614.459961 l
374.220001 614.519958 l
374.279999 614.519958 l
374.700012 614.459961 l
374.819977 614.400024 l
375.119995 614.159973 l
375.179993 614.100037 l
375.419983 613.73999 l
375.47998 613.559998 l
375.539978 613.140015 l
f
n
374.940002 613.140015 m
374.940002 613.079956 l
375.539978 613.140015 l
375.539978 613.079956 l
f
n
289.079987 676.919983 m
325.619995 676.919983 l
0.599976 w
S
1.0 w
n
280.559998 676.919983 m
289.080017 676.919983 l
0.599976 w
S
1.0 w
n
280.529999 605.76001 m
280.529999 606.359985 l
0.299988 w
S
1.0 w
n
280.679993 606.059998 m
325.919983 606.059998 l
0.599976 w
S
1.0 w
n
279.959991 676.919983 m
279.959991 677.519958 l
279.959991 677.459961 l
279.899994 678.059998 l
279.839996 678.659973 l
279.839996 678.539978 l
279.720001 679.140015 l
279.600006 679.679993 l
279.47998 680.219971 l
279.47998 680.159973 l
279.300018 680.700012 l
279.359985 680.640015 l
279.119995 681.179993 l
278.880005 681.719971 l
278.880005 681.659973 l
278.639984 682.140015 l
278.700012 682.079956 l
278.399994 682.559998 l
278.100006 683.039978 l
277.800018 683.519958 l
277.859985 683.459961 l
277.5 683.880005 l
277.139984 684.299988 l
277.139984 684.23999 l
276.720001 684.659973 l
276.720001 684.719971 l
276.359985 685.140015 l
276.47998 685.019958 l
276.0 685.380005 l
275.940002 685.380005 l
275.519989 685.73999 l
275.639984 685.679993 l
275.160004 685.97998 l
275.100006 686.039978 l
274.679993 686.339966 l
274.73999 686.279968 l
274.200012 686.579956 l
274.259979 686.579956 l
273.779999 686.820007 l
273.779999 686.76001 l
273.23999 687.0 l
272.700012 687.23999 l
272.759979 687.23999 l
272.220001 687.419983 l
272.339996 687.419983 l
271.800018 687.539978 l
271.259979 687.659973 l
271.259979 687.600037 l
270.660004 687.719971 l
270.720001 687.719971 l
270.119995 687.779968 l
269.519989 687.839966 l
269.579987 687.839966 l
268.380005 687.839966 l
268.440002 687.839966 l
267.839996 687.779968 l
267.899994 687.779968 l
267.359985 687.719971 l
267.419983 687.719971 l
266.820007 687.600037 l
266.820007 687.659973 l
266.279999 687.539978 l
266.279999 687.47998 l
265.679993 687.359985 l
265.73999 687.419983 l
265.200012 687.23999 l
265.320007 687.299988 l
264.839996 687.059998 l
264.779999 687.0 l
264.23999 686.76001 l
263.639984 688.140015 l
264.179993 688.380005 l
264.660004 688.619995 l
264.720001 688.679993 l
265.259979 688.859985 l
265.380005 688.859985 l
265.97998 688.97998 l
266.519989 689.100037 l
267.119995 689.219971 l
267.179993 689.219971 l
267.720001 689.279968 l
268.320007 689.339966 l
269.639984 689.339966 l
270.23999 689.279968 l
270.839996 689.219971 l
270.959991 689.219971 l
271.559998 689.100037 l
272.100006 688.97998 l
272.639984 688.859985 l
272.700012 688.859985 l
273.23999 688.679993 l
273.300018 688.619995 l
274.380005 688.140015 l
274.440002 688.140015 l
274.919983 687.900024 l
275.459991 687.600037 l
275.579987 687.539978 l
276.0 687.23999 l
275.940002 687.23999 l
276.419983 686.940002 l
276.47998 686.880005 l
276.899994 686.519958 l
276.899994 686.579956 l
277.380005 686.219971 l
277.5 686.100037 l
277.859985 685.679993 l
277.800018 685.73999 l
278.220001 685.320007 l
278.279999 685.26001 l
278.639984 684.839966 l
279.0 684.419983 l
279.059998 684.299988 l
279.359985 683.820007 l
279.660004 683.339966 l
279.959991 682.859985 l
279.959991 682.799988 l
280.200012 682.320007 l
280.259979 682.320007 l
280.5 681.779968 l
280.73999 681.23999 l
280.73999 681.179993 l
280.919983 680.640015 l
280.919983 680.519958 l
281.040009 679.97998 l
281.160004 679.440002 l
281.220001 679.440002 l
281.339996 678.839966 l
281.339996 678.779968 l
281.399994 678.179993 l
281.459991 677.579956 l
281.459991 676.919983 l
f
n
264.23999 686.76001 m
263.700012 686.519958 l
263.820007 686.579956 l
263.339996 686.279968 l
262.859985 685.97998 l
262.919983 686.039978 l
262.5 685.73999 l
262.019989 685.380005 l
261.600006 685.019958 l
261.720001 685.140015 l
261.359985 684.719971 l
261.300018 684.659973 l
260.880005 684.23999 l
260.940002 684.299988 l
260.579987 683.880005 l
260.220001 683.459961 l
260.279999 683.519958 l
259.97998 683.039978 l
259.679993 682.559998 l
259.380005 682.079956 l
259.380005 682.140015 l
259.139984 681.659973 l
259.200012 681.719971 l
258.959991 681.179993 l
258.720001 680.640015 l
258.720001 680.700012 l
258.540009 680.159973 l
258.540009 680.219971 l
258.419983 679.679993 l
258.419983 679.619995 l
258.23999 679.079956 l
258.300018 679.26001 l
258.23999 678.659973 l
258.23999 678.539978 l
258.119995 677.940002 l
258.119995 678.119995 l
258.119995 677.459961 l
258.059998 676.859985 l
258.059998 676.97998 l
258.119995 676.380005 l
258.119995 675.719971 l
258.059998 675.839966 l
258.179993 675.299988 l
258.23999 675.23999 l
258.300018 674.640015 l
258.23999 674.820007 l
258.419983 674.279968 l
258.47998 674.159973 l
258.600006 673.559998 l
258.540009 673.679993 l
258.720001 673.140015 l
258.720001 673.200012 l
258.959991 672.659973 l
258.899994 672.659973 l
259.139984 672.179993 l
259.200012 672.179993 l
259.440002 671.640015 l
259.380005 671.700012 l
259.679993 671.219971 l
259.97998 670.73999 l
259.919983 670.799988 l
260.220001 670.380005 l
260.579987 669.900024 l
260.579987 669.959961 l
260.940002 669.539978 l
260.880005 669.600037 l
261.300018 669.179993 l
261.660004 668.820007 l
261.600006 668.820007 l
262.019989 668.459961 l
262.019989 668.519958 l
261.119995 667.320007 l
261.059998 667.320007 l
260.639984 667.679993 l
260.220001 668.100037 l
259.800018 668.519958 l
259.800018 668.579956 l
259.440002 669.0 l
259.380005 669.0 l
259.019989 669.47998 l
258.720001 669.900024 l
258.720001 669.959961 l
258.419983 670.440002 l
258.119995 670.919983 l
258.059998 671.039978 l
257.820007 671.579956 l
257.820007 671.519958 l
257.579987 672.0 l
257.579987 672.059998 l
257.339996 672.600037 l
257.279999 672.659973 l
257.100006 673.200012 l
257.100006 673.26001 l
256.97998 673.859985 l
256.97998 673.799988 l
256.800018 674.339966 l
256.800018 674.519958 l
256.73999 675.119995 l
256.73999 675.0 l
256.619995 675.539978 l
256.619995 676.320007 l
256.619995 676.26001 l
256.559998 676.859985 l
256.559998 676.97998 l
256.619995 677.579956 l
256.619995 677.519958 l
256.619995 678.23999 l
256.73999 678.839966 l
256.73999 678.779968 l
256.800018 679.380005 l
256.800018 679.559998 l
256.97998 680.100037 l
256.97998 679.97998 l
257.100006 680.519958 l
257.100006 680.640015 l
257.279999 681.179993 l
257.339996 681.23999 l
257.579987 681.779968 l
257.820007 682.320007 l
258.059998 682.799988 l
258.119995 682.859985 l
258.419983 683.339966 l
259.019989 684.299988 l
259.079987 684.419983 l
259.440002 684.839966 l
259.800018 685.26001 l
259.800018 685.320007 l
260.220001 685.73999 l
260.220001 685.679993 l
260.579987 686.100037 l
260.639984 686.159973 l
261.059998 686.519958 l
261.119995 686.579956 l
261.600006 686.940002 l
262.019989 687.23999 l
262.079987 687.23999 l
262.559998 687.539978 l
263.040009 687.839966 l
263.100006 687.900024 l
263.639984 688.140015 l
f
n
262.019989 668.519958 m
262.5 668.159973 l
262.919983 667.859985 l
262.859985 667.859985 l
263.339996 667.559998 l
263.820007 667.26001 l
263.700012 667.320007 l
264.23999 667.079956 l
264.779999 666.839966 l
264.839996 666.839966 l
265.320007 666.600037 l
265.200012 666.659973 l
265.73999 666.47998 l
265.679993 666.47998 l
266.279999 666.359985 l
266.339996 666.359985 l
266.880005 666.179993 l
266.700012 666.179993 l
267.300018 666.119995 l
267.419983 666.119995 l
267.959991 666.0 l
267.779999 666.0 l
268.440002 666.0 l
269.040009 665.940002 l
268.919983 665.940002 l
269.519989 666.0 l
270.179993 666.0 l
270.059998 666.0 l
270.660004 666.119995 l
270.720001 666.119995 l
271.320007 666.179993 l
271.139984 666.179993 l
271.679993 666.359985 l
271.800018 666.359985 l
272.339996 666.47998 l
272.220001 666.47998 l
272.759979 666.659973 l
272.700012 666.600037 l
273.23999 666.839966 l
273.779999 667.079956 l
274.259979 667.320007 l
274.200012 667.320007 l
274.73999 667.619995 l
274.679993 667.559998 l
275.100006 667.859985 l
275.160004 667.859985 l
275.639984 668.159973 l
275.519989 668.100037 l
275.940002 668.459961 l
276.0 668.519958 l
276.47998 668.880005 l
276.359985 668.820007 l
276.720001 669.179993 l
277.139984 669.600037 l
277.139984 669.539978 l
277.5 669.959961 l
277.440002 669.900024 l
277.800018 670.380005 l
278.100006 670.799988 l
278.100006 670.73999 l
278.399994 671.219971 l
278.700012 671.700012 l
278.639984 671.640015 l
278.880005 672.179993 l
279.119995 672.659973 l
279.359985 673.200012 l
279.300018 673.140015 l
279.47998 673.679993 l
279.47998 673.559998 l
279.600006 674.159973 l
281.040009 673.859985 l
281.100006 673.859985 l
280.97998 673.26001 l
280.919983 673.200012 l
280.73999 672.659973 l
280.73999 672.600037 l
280.5 672.059998 l
280.440002 672.0 l
280.200012 671.519958 l
280.259979 671.579956 l
280.019989 671.039978 l
279.959991 670.919983 l
279.660004 670.440002 l
279.359985 669.959961 l
279.300018 669.900024 l
279.0 669.47998 l
278.639984 669.0 l
278.279999 668.579956 l
278.220001 668.519958 l
277.800018 668.100037 l
277.380005 667.679993 l
276.899994 667.320007 l
276.47998 666.959961 l
276.419983 666.900024 l
275.940002 666.600037 l
276.0 666.659973 l
275.579987 666.359985 l
275.459991 666.299988 l
274.919983 666.0 l
274.440002 665.76001 l
274.380005 665.700012 l
273.839996 665.459961 l
273.300018 665.219971 l
273.23999 665.219971 l
272.700012 665.039978 l
272.639984 665.039978 l
272.100006 664.919983 l
272.160004 664.919983 l
271.619995 664.73999 l
271.440002 664.679993 l
270.839996 664.619995 l
270.959991 664.619995 l
270.359985 664.5 l
269.579987 664.5 l
269.639984 664.5 l
269.040009 664.440002 l
268.919983 664.440002 l
268.320007 664.5 l
268.380005 664.5 l
267.779999 664.5 l
267.660004 664.559998 l
267.119995 664.679993 l
267.179993 664.619995 l
266.579987 664.679993 l
265.859985 664.919983 l
265.97998 664.859985 l
265.380005 664.97998 l
265.259979 665.039978 l
264.720001 665.219971 l
264.660004 665.279968 l
264.179993 665.519958 l
264.179993 665.459961 l
263.639984 665.700012 l
263.100006 665.940002 l
263.040009 666.0 l
262.559998 666.299988 l
262.079987 666.600037 l
262.019989 666.659973 l
261.600006 666.959961 l
261.119995 667.320007 l
f
n
279.600006 674.159973 m
279.720001 674.700012 l
279.839996 675.299988 l
279.839996 675.23999 l
279.899994 675.779968 l
279.959991 676.380005 l
279.959991 676.320007 l
279.959991 676.919983 l
281.459991 676.919983 l
281.459991 676.26001 l
281.399994 675.659973 l
281.399994 675.600037 l
281.339996 675.059998 l
281.339996 675.0 l
281.220001 674.400024 l
281.160004 674.400024 l
281.040009 673.859985 l
f
n
239.339996 669.839966 m
253.5 669.839966 l
0.599976 w
S
1.0 w
n
239.339996 684.0 m
253.5 684.0 l
0.600037 w
S
1.0 w
n
279.959991 606.059998 m
279.959991 606.659973 l
279.959991 606.600037 l
279.899994 607.200012 l
279.839996 607.799988 l
279.839996 607.679993 l
279.720001 608.279968 l
279.47998 609.359985 l
279.47998 609.299988 l
279.300018 609.839966 l
279.359985 609.779968 l
279.119995 610.320007 l
278.880005 610.859985 l
278.880005 610.799988 l
278.639984 611.279968 l
278.700012 611.219971 l
278.399994 611.700012 l
278.100006 612.179993 l
277.800018 612.659973 l
277.859985 612.600037 l
277.139984 613.440002 l
277.139984 613.380005 l
276.720001 613.799988 l
276.720001 613.859985 l
276.359985 614.279968 l
276.47998 614.159973 l
276.0 614.519958 l
275.579987 614.820007 l
275.100006 615.179993 l
274.679993 615.47998 l
274.73999 615.419983 l
274.200012 615.719971 l
274.259979 615.719971 l
273.779999 615.959961 l
273.779999 615.900024 l
273.23999 616.140015 l
273.300018 616.140015 l
272.759979 616.320007 l
272.220001 616.5 l
271.679993 616.679993 l
271.800018 616.679993 l
271.259979 616.799988 l
271.259979 616.73999 l
270.660004 616.859985 l
270.720001 616.859985 l
270.119995 616.919983 l
269.519989 616.97998 l
269.579987 616.97998 l
268.380005 616.97998 l
268.440002 616.97998 l
267.839996 616.919983 l
267.899994 616.919983 l
267.359985 616.859985 l
267.419983 616.859985 l
266.820007 616.73999 l
266.820007 616.799988 l
266.279999 616.679993 l
266.339996 616.679993 l
265.73999 616.5 l
265.200012 616.320007 l
265.259979 616.320007 l
264.779999 616.140015 l
264.23999 615.900024 l
263.639984 617.279968 l
264.179993 617.519958 l
264.23999 617.519958 l
264.720001 617.700012 l
264.720001 617.76001 l
265.259979 617.940002 l
265.320007 617.940002 l
265.919983 618.119995 l
265.97998 618.119995 l
266.519989 618.23999 l
267.119995 618.359985 l
267.179993 618.359985 l
267.720001 618.419983 l
268.320007 618.47998 l
269.639984 618.47998 l
270.23999 618.419983 l
270.839996 618.359985 l
270.959991 618.359985 l
271.559998 618.23999 l
272.100006 618.119995 l
272.160004 618.119995 l
272.700012 617.940002 l
273.23999 617.76001 l
273.779999 617.579956 l
273.839996 617.519958 l
274.380005 617.279968 l
274.440002 617.279968 l
274.919983 617.039978 l
275.459991 616.73999 l
275.579987 616.679993 l
276.0 616.380005 l
276.47998 616.019958 l
276.899994 615.719971 l
277.380005 615.359985 l
277.5 615.23999 l
277.859985 614.820007 l
277.800018 614.880005 l
278.220001 614.459961 l
278.279999 614.400024 l
278.639984 613.97998 l
279.0 613.559998 l
279.059998 613.440002 l
279.359985 612.959961 l
279.660004 612.47998 l
279.959991 612.0 l
279.959991 611.940002 l
280.200012 611.459961 l
280.259979 611.459961 l
280.5 610.919983 l
280.73999 610.380005 l
280.73999 610.320007 l
280.919983 609.779968 l
280.919983 609.659973 l
281.040009 609.119995 l
281.160004 608.579956 l
281.220001 608.579956 l
281.339996 607.97998 l
281.339996 607.919983 l
281.399994 607.320007 l
281.459991 606.719971 l
281.459991 606.059998 l
f
n
264.23999 615.900024 m
263.700012 615.659973 l
263.820007 615.719971 l
263.339996 615.419983 l
262.859985 615.119995 l
262.919983 615.179993 l
262.5 614.820007 l
262.440002 614.76001 l
261.959991 614.459961 l
262.019989 614.519958 l
261.600006 614.159973 l
261.720001 614.279968 l
261.359985 613.859985 l
261.300018 613.799988 l
260.880005 613.380005 l
260.940002 613.440002 l
260.579987 613.019958 l
260.220001 612.600037 l
260.279999 612.659973 l
259.97998 612.179993 l
259.679993 611.700012 l
259.380005 611.219971 l
259.380005 611.279968 l
259.139984 610.799988 l
259.200012 610.859985 l
258.959991 610.320007 l
258.720001 609.779968 l
258.720001 609.839966 l
258.540009 609.299988 l
258.540009 609.359985 l
258.419983 608.820007 l
258.419983 608.76001 l
258.23999 608.219971 l
258.300018 608.400024 l
258.23999 607.799988 l
258.23999 607.679993 l
258.119995 607.079956 l
258.119995 607.26001 l
258.119995 606.600037 l
258.059998 606.0 l
258.059998 606.119995 l
258.119995 605.519958 l
258.119995 604.859985 l
258.059998 604.97998 l
258.179993 604.440002 l
258.23999 604.380005 l
258.300018 603.779968 l
258.23999 603.900024 l
258.419983 603.299988 l
258.419983 603.23999 l
258.540009 602.700012 l
258.540009 602.820007 l
258.720001 602.279968 l
258.720001 602.339966 l
258.959991 601.799988 l
258.899994 601.799988 l
259.139984 601.320007 l
259.200012 601.320007 l
259.440002 600.779968 l
259.380005 600.839966 l
259.679993 600.359985 l
259.97998 599.880005 l
259.919983 599.940002 l
260.220001 599.519958 l
260.579987 599.039978 l
260.579987 599.100037 l
260.940002 598.679993 l
260.880005 598.73999 l
261.300018 598.320007 l
261.660004 597.959961 l
261.600006 597.959961 l
262.019989 597.600037 l
262.019989 597.659973 l
261.119995 596.459961 l
261.059998 596.459961 l
260.639984 596.820007 l
260.220001 597.23999 l
259.800018 597.659973 l
259.800018 597.719971 l
259.440002 598.140015 l
259.380005 598.140015 l
259.019989 598.619995 l
258.720001 599.039978 l
258.720001 599.100037 l
258.419983 599.580017 l
258.119995 600.059998 l
258.059998 600.179993 l
257.820007 600.719971 l
257.820007 600.659973 l
257.579987 601.140015 l
257.579987 601.200012 l
257.339996 601.73999 l
257.279999 601.799988 l
257.100006 602.339966 l
257.100006 602.400024 l
256.97998 602.940002 l
256.97998 602.880005 l
256.800018 603.47998 l
256.800018 603.659973 l
256.73999 604.26001 l
256.73999 604.140015 l
256.619995 604.679993 l
256.619995 605.459961 l
256.619995 605.400024 l
256.559998 606.0 l
256.559998 606.119995 l
256.619995 606.719971 l
256.619995 606.659973 l
256.619995 607.380005 l
256.73999 607.97998 l
256.73999 607.919983 l
256.800018 608.519958 l
256.800018 608.700012 l
256.97998 609.23999 l
256.97998 609.119995 l
257.100006 609.659973 l
257.100006 609.779968 l
257.279999 610.320007 l
257.339996 610.380005 l
257.579987 610.919983 l
257.820007 611.459961 l
258.059998 611.940002 l
258.119995 612.0 l
258.419983 612.47998 l
259.019989 613.440002 l
259.079987 613.559998 l
259.440002 613.97998 l
259.800018 614.400024 l
259.800018 614.459961 l
260.220001 614.880005 l
260.220001 614.820007 l
260.579987 615.23999 l
260.639984 615.299988 l
261.059998 615.659973 l
261.179993 615.719971 l
261.660004 616.019958 l
261.540009 615.959961 l
261.959991 616.320007 l
262.079987 616.380005 l
262.559998 616.679993 l
263.040009 616.97998 l
263.100006 617.039978 l
263.639984 617.279968 l
f
n
262.019989 597.659973 m
262.5 597.299988 l
262.919983 597.0 l
263.399994 596.640015 l
263.279999 596.700012 l
263.759979 596.459961 l
264.300018 596.159973 l
264.179993 596.219971 l
264.720001 596.039978 l
264.839996 595.97998 l
265.320007 595.73999 l
265.200012 595.799988 l
265.73999 595.619995 l
266.339996 595.440002 l
266.279999 595.440002 l
266.820007 595.320007 l
267.419983 595.200012 l
267.359985 595.200012 l
267.899994 595.140015 l
267.839996 595.140015 l
268.440002 595.080017 l
268.380005 595.080017 l
269.579987 595.080017 l
269.519989 595.080017 l
270.720001 595.200012 l
270.660004 595.200012 l
271.259979 595.320007 l
271.800018 595.440002 l
271.679993 595.440002 l
272.220001 595.619995 l
272.759979 595.799988 l
272.700012 595.73999 l
273.23999 595.97998 l
273.300018 596.039978 l
273.839996 596.219971 l
273.720001 596.100037 l
274.200012 596.400024 l
274.259979 596.459961 l
274.800018 596.700012 l
274.619995 596.580017 l
275.040009 596.940002 l
275.160004 597.0 l
275.639984 597.299988 l
275.519989 597.23999 l
275.940002 597.600037 l
276.0 597.659973 l
276.47998 598.019958 l
276.359985 597.959961 l
277.139984 598.73999 l
277.139984 598.679993 l
277.5 599.100037 l
277.440002 599.039978 l
277.800018 599.519958 l
278.100006 599.940002 l
278.100006 599.880005 l
278.399994 600.359985 l
278.700012 600.839966 l
278.639984 600.779968 l
278.880005 601.320007 l
279.119995 601.799988 l
279.359985 602.339966 l
279.300018 602.279968 l
279.47998 602.820007 l
279.47998 602.700012 l
279.600006 603.23999 l
281.100006 602.940002 l
281.040009 602.940002 l
280.919983 602.400024 l
280.919983 602.339966 l
280.73999 601.799988 l
280.73999 601.73999 l
280.5 601.200012 l
280.440002 601.140015 l
280.200012 600.659973 l
280.259979 600.719971 l
280.019989 600.179993 l
279.959991 600.059998 l
279.660004 599.580017 l
279.359985 599.100037 l
279.300018 599.039978 l
279.0 598.619995 l
278.639984 598.140015 l
278.279999 597.719971 l
278.220001 597.659973 l
277.800018 597.23999 l
277.380005 596.820007 l
276.899994 596.459961 l
276.47998 596.100037 l
276.419983 596.039978 l
275.940002 595.73999 l
276.0 595.799988 l
275.579987 595.440002 l
275.399994 595.320007 l
274.859985 595.080017 l
274.97998 595.140015 l
274.5 594.839966 l
274.320007 594.779968 l
273.779999 594.600037 l
273.839996 594.600037 l
273.300018 594.359985 l
273.23999 594.359985 l
272.700012 594.179993 l
272.160004 594.0 l
272.100006 594.0 l
271.559998 593.880005 l
271.559998 593.820007 l
270.959991 593.700012 l
270.839996 593.700012 l
269.639984 593.580017 l
268.320007 593.580017 l
267.720001 593.640015 l
267.179993 593.700012 l
267.119995 593.700012 l
266.519989 593.820007 l
266.519989 593.880005 l
265.97998 594.0 l
265.919983 594.0 l
265.320007 594.179993 l
265.259979 594.179993 l
264.720001 594.359985 l
264.660004 594.419983 l
264.179993 594.659973 l
264.23999 594.600037 l
263.700012 594.779968 l
263.579987 594.839966 l
263.040009 595.140015 l
263.100006 595.140015 l
262.619995 595.380005 l
262.5 595.440002 l
262.019989 595.799988 l
261.600006 596.100037 l
261.119995 596.459961 l
f
n
279.600006 603.23999 m
279.720001 603.839966 l
279.839996 604.440002 l
279.839996 604.380005 l
279.899994 604.919983 l
279.959991 605.519958 l
279.959991 605.459961 l
279.959991 606.059998 l
281.459991 606.059998 l
281.459991 605.400024 l
281.399994 604.799988 l
281.399994 604.73999 l
281.339996 604.200012 l
281.339996 604.140015 l
281.220001 603.539978 l
281.100006 602.940002 l
f
n
239.339996 613.139954 m
253.080002 613.139954 l
0.599976 w
S
1.0 w
n
239.339996 669.839966 m
239.339996 670.140015 l
0.600006 w
S
1.0 w
n
239.339996 612.839966 m
239.339996 669.839966 l
0.600006 w
S
1.0 w
n
239.48999 683.700012 m
239.48999 684.300049 l
0.300003 w
S
1.0 w
n
217.73999 684.0 m
239.339996 684.0 l
0.600037 w
S
1.0 w
n
217.73999 598.97998 m
239.039993 598.97998 l
0.599976 w
S
1.0 w
n
239.039993 598.97998 m
253.37999 598.97998 l
0.599976 w
S
1.0 w
207.419998 680.940002 m
%ADOBeginSubsetFont: HODMHH+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HODMHH+TimesNewRomanPSMT gcheck setglobal} if
1 1150 53 <0002002300000568054c00280034020240b224180f0f0255250c0f0f0255
872201128526c523c52d034924a72d02181f172e66240309010925262547
0058016f026f247b017b02731f7320762278258a018720982dab01ab25b7
26bc2dff2415062084018c2484279a24a501a402a624af2dbf2dd830ef2d
ff2d0d120016011a0212281a301a313a2e3a306624692f0a2a08021c1c01
151f1b0f21220025281b00081f1b0e2123161f1b1c212340022c25242422
02011402020124ac022002072a29a507b8ffc040170f0f02550710075007
6007039007a0070207001bac1c34b80191400f32281d1d1c020f0e0e0101
00081221b8ffc0b2583521b8ffc040454f350021af21024f21a0210221b5
10360140367036d036033634080613130255080c0f0f0255080c0d0d0255
082216150c10100255150c0f0f0255151a0d0d0255159e3561b901190018
2b4e10f42b2b2b3c4dfd2b2b2b3c105d72f45d712b2b4358b9002f032de9
1bb9002f032ded59003f3c103c103c3f3c10eded10ed12395d722f2bfd3c
103c191a10ed870e2e182b7d10c40112391a182b2b10ed0110c02b871005
7dc43130184379401c2d311e231f252d232f3301311e2f33012e222c3300
23243020323301002b103c2b012b2b2b81810172715d0072715d435c58b9
0025ffe0b20c3901b8fff0b2143928b8ffe0b614390210193928b8fff0b5
103930100f39002b012b2b2b2b002b59015d2b2b21210106232226271114
171633331521353332373635113427262323352132161615140607011616
170132163332363534262322070568fe96fe3533200d1e101c264c35fdbb
335625151c274d3301eed8cd8fa3ab0118608a6ffc3d131c09c2c59f833a
63027a020101fe76801f2c2525381f74036c801f2c253fa9757db826fe7b
86580c029401a8827f9f1300>HODMHH+TimesNewRomanPSMT AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>HODMHH+TimesNewRomanPSMT AddT42Char 
HODMHH+TimesNewRomanPSMT /CharStrings get begin
/R 53 def
end
HODMHH+TimesNewRomanPSMT /Encoding get
dup 82 /R put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N29 9.0 Tf
(R) show
208.439697 595.919678 m
%ADOBeginSubsetFont: HODMHH+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HODMHH+TimesNewRomanPSMT gcheck setglobal} if
1 1822 54 <00010080ffe10405056b00380257401912952c010f010f020b03000f0428
0029052b4f014f0209113ab8014640d03638361a031b045f185f195f1a5f
1b06050d050e002ac03a04740b740d740e760f701e701f702f7030890886
0b870d870e840f872ba804a83310120d330d340d351d331d341d352f012f
022d04201e201f29292d333e013e023f043019301e301f30213d343d3548
0d482a540b560d57105629562b1d1f011f021b331f351b3654185419541a
59325c335c345c355c365a370e030b0b29130b1b29230b203a3b29303a72
12721389249807982f9930a82fc028c12ac62bc03af03a144e08381b006f
021baf01cf0102017f010101ba00b8034b400d359a311c1b1d6f1f1b1e1e
ba1db8034b4034199a142a2b2b3c0c0e140c0c0e2b0c2a0e0426092b0c2a
0e04062301fd0000062831032328140902ac01401e223401011f260126b8
012340102f11bf1102df11012011af11df110311b80287b71fac1e2b1009
0109b80123401f9f2e01bf2eef2eff2e032e404735402ecf2eef2e03002e
202e302ec02e042ebc014600390146011800182b4e10f45d5d2b71724ded
72f4edfd5d7172fd72392f2bed003fed3fed3c10ed111217390111121739
870e2e2b0e7d10c4180010ecf4ed0110edf4ed0010ecf4ed5d011071edf4
ed3130437940362430071328260b2c093300290f26330124132633010730
0933000a2d0c33000b0c2c2b27102a33010f0e292a2512233300082f0633
01002b2b103c103c2b103c103c2b012b2b2b2b2b8181015d00725d435840
09630b660d6710632b045d595d0171722b0071005d435c58400c0b180f39
04300f3933300f39002b2b2b590111232e0223220615141716171e021514
062322272626232206072311331e02333236353426272624262635343633
3217163332363703ab25125dac5c68882b3ee9be8b4befbc3b341fc31a19
1d0725251a58b56c7d91373a27fea4934ce0ad6c7938171a210a056bfe2b
87a05e7f513e334b7d666d94519adf09053f1e2f01d1929160845a32662c
1ec3748c5492d335191f2f00>HODMHH+TimesNewRomanPSMT AddT42Char 
HODMHH+TimesNewRomanPSMT /CharStrings get begin
/S 54 def
end
HODMHH+TimesNewRomanPSMT /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(S) show
n
239.48999 641.219971 m
239.48999 641.820007 l
0.300003 w
S
1.0 w
n
217.73999 641.52002 m
239.339996 641.52002 l
0.600037 w
S
1.0 w
200.459991 639.0 m
%ADOBeginSubsetFont: HODMHH+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HODMHH+TimesNewRomanPSMT gcheck setglobal} if
1 380 38 <0001004affe1050f056b002401024042091e2f012f022f032f1f960f991e
a30fa312b60fb7120b081e011617017d037b1578168d038a169d03961aac
03bb03090c030e04021d48035903052f081011241b00b80105b5021b0101
ba00b8034bb6209a05281c0301b802dfb5112bb0100110b80341b58f0d9f
0d020db8032f402f140902ac000101013210acaf11011f113f1102111a40
260126093c2018010f181f1802180c0d0d02551849256463182b4e10f42b
5d724ded4e105df672714dedf471ed003ffd71f45df4e63fedecf4ed0110
edf4ed10c9313043794020151b060c07251a260b261625061b092d000c15
092d000819052d010a170d2d00002b2b012b2b2b2b2b2b818101715d0072
715d01132326262322060215141216333236371706042320272635341224
33321716333237363704d11f1f3ee6a187da7d76ed9884ca791f66fef0bb
feafb98ab6013fbd938f2a121b141a0b056bfe33cfb689fed4dfb8fef290
71a814b5a8fabafccb0154bb4816131b3000>HODMHH+TimesNewRomanPSMT AddT42Char 
1 6548 79 <0001003d0000020f058e00150191b10202435458b90017fff6401d0d0d02
55140c06010701080d0d025501040f0f025501060c0c0255010cb8fff2b4
131302550cb8ffeab40c0c02550cb8ffe2b40d0d02550cb8ffd6b4101002
550cb8ffdeb50f0f02550c05bd03e2000803e20007001303e2400b131440
090d025514150007002f3fdd2b32ed10eded012f2b2b2b2b2bcd2b2b2bc4
10c410c631302b1bb1060243545840271312101006551414101006551314
1500000007010c0d0d065501021010065501040f0f0655010cb8fff0b410
1006550cb8fff4b40f0f06550cb8fff0b70d0d06550c0c17161112392f2b
2b2bcd2b2b2b002f3f3fddcd3130012b2b1bb79017c017f0170317b8ffc0
b33f463417b8ffc0403a393b340117b20d64365017014017501760177017
9017a017f017070c291e074a2201291e06272314270d41131e1444150000
07060a0001240d0cb8ffc0b33f46340cb8ffc0401a353b34900c01500c01
600c700c900ca00cf00c050cb216b2a3182b10f65d71722b2b3cfd3c003f
3c3f3cf5edfc01f52b2b3130015d0171012b012b2b017259590111141616
3315213532363635113426262322072725017b193447fe3f3f2e1a0e1f18
1a28110111058efb4156381d24241a3c5503409b471a10237000>HODMHH+TimesNewRomanPSMT AddT42Char 
1 5418 78 <000100110000040c058e003703bfb10202435458402b1a0c10100255190c
10100255200c0d0d0255110c0d0d0255010c0d0d0255200c0d1002551f16
0d10025526b8ffe8b40d0d025526b8ffe8402b10100255262136272e1f01
21080d0d025521040f0f025521060c0c0255212e0e131302552e16121202
552eb8fff6b40d0d02552eb8fff4b40f0f02552eb8ffeeb4101002552eb8
fffe40100f0f02552e1001111f04260a171a2528b8ffe8b40d0f025528bb
03e20026003503e240123640090d025536370026190c0c0d0d02550cb803
e2b6090c0d0f025509b803e2b10a06003fed2bed2b2f2f3fdd2bed10fd2b
c0c0c011121739012f2b2b2b2b2b2bdd2b2b2bc0c610c4c610c42b2b3130
002b2b2b2b2b012b2b1b40b90f391f3902120610010610019309950a900b
900c9b0f9a119b129a1f9f39b30a0a3919391a5f105f115f1f6c106f116f
1f9b0209eb1eed1f028009810ec603c60fe902e90fed11ef12083f113f18
3f1f38203f39460f720a750f082f022a10202520262f3938013810071510
5501521054200423105701570fe610f510054911481fc209c20ae30a0517
0916101f1d1f1f4502420f060b110f130d1a0c1d0f1e0e1f065303550453
0559105411541306190f1d1d1e1f530204b10602435458402f3618101006
55200110030a27353637007c0c010c7b0901090a0619270c0c3938012102
10100655210c0f0f0655212eb8ffe6b4101006552eb8fff0b40f0f06552e
b8fffab70d0d06552e2e39381112392f2b2b2bdd2b2bc01112392f002f2f
3fcd5dcd5d3fddcd111217393130012b1b4055100f01021112131310191f
1a1e192e291e2727220a02091e0a21291e26272336272f41351e3644002f
000b13101024201f14200102201f0f101030010214010102012000201f13
010427020f0a1010180a37000017b801ec404c180ccc0b0b0a0627262619
19180a0b300c800c02f00c01d00ce00c02700cc00c020c2f17179f180118
1a1f39013921242e00242f2f002e102eb02ec02ed02e05502e01802e902e
022e603839b80178b321a66e182b2b4ef471725d3c4d10ed10ed4e1072f6
5d3c4d10f45d5d5d713c003f3c103c103c3f3c10ed10ed3f3c191112392f
12393912173901103c3c870e2e182b0e7d10c487082e182b0e7d10c40011
12391810f5edfc01f52b10ed0110c02b10ed0110c0870e7d10c4c4070759
313001727271715d005d72015d5d5d5d5d5d00710071435c58b90010ffe8
4014120b3f1f281239012812391d400f391f280f3902b8ffc0b20b390bb8
ffc0b211390fb8ffc0b2113909b8ffc0b211390cb8ffc0b11139012b2b2b
2b002b2b2b2b2b012b59015d590111373637363534262735211506060707
131617161716331521353636353427011114161617152135323736373635
113426262322072725014fe94a0c082126018e526d41ebeb62223024193e
fe43261b28fee7192e4dfe2e4623150b0f0e201a152a110110058efc70d5
44120c0c141d022020022e3bd9fed77b212f0e0a242401151317330167fe
d0593818012424110b17215103429f471b112370>HODMHH+TimesNewRomanPSMT AddT42Char 
HODMHH+TimesNewRomanPSMT /CharStrings get begin
/C 38 def
/l 79 def
/k 78 def
end
HODMHH+TimesNewRomanPSMT /Encoding get
dup 67 /C put
dup 108 /l put
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Clk)
[5.981467 2.480399 4.4784 ] pdfxs
n
240.360001 641.519958 m
240.300003 641.940002 l
240.059998 642.23999 l
239.759995 642.47998 l
239.339996 642.600037 l
238.919998 642.47998 l
238.559998 642.23999 l
238.319992 641.940002 l
238.259995 641.519958 l
238.319992 641.100037 l
238.559998 640.73999 l
238.919998 640.5 l
239.339996 640.440002 l
239.759995 640.5 l
240.059998 640.73999 l
240.300003 641.100037 l
240.360001 641.519958 l
eofill
n
240.059998 641.459961 m
240.0 641.880005 l
240.059998 641.76001 l
239.819992 642.059998 l
239.87999 642.0 l
239.580002 642.23999 l
239.699997 642.179993 l
239.279999 642.299988 l
239.459991 642.299988 l
239.039993 642.179993 l
239.100006 642.23999 l
238.73999 642.0 l
238.800003 642.059998 l
238.559998 641.76001 l
238.619995 641.880005 l
238.559998 641.459961 l
238.559998 641.519958 l
238.619995 641.100037 l
238.559998 641.279968 l
238.800003 640.919983 l
238.73999 640.97998 l
239.100006 640.73999 l
238.979996 640.799988 l
239.400009 640.73999 l
239.339996 640.73999 l
239.759995 640.799988 l
239.580002 640.73999 l
239.87999 640.97998 l
239.819992 640.919983 l
240.059998 641.279968 l
240.0 641.100037 l
240.059998 641.519958 l
240.659988 641.459961 l
240.600006 641.039978 l
240.539993 640.919983 l
240.300003 640.559998 l
240.23999 640.5 l
239.939987 640.26001 l
239.819992 640.200012 l
239.400009 640.140015 l
239.339996 640.140015 l
238.919998 640.200012 l
238.73999 640.26001 l
238.37999 640.5 l
238.319992 640.559998 l
238.080002 640.919983 l
238.019989 641.039978 l
237.959991 641.459961 l
237.959991 641.519958 l
238.019989 641.940002 l
238.080002 642.119995 l
238.319992 642.419983 l
238.37999 642.47998 l
238.73999 642.719971 l
238.860001 642.779968 l
239.279999 642.900024 l
239.459991 642.900024 l
239.87999 642.779968 l
239.939987 642.719971 l
240.23999 642.47998 l
240.300003 642.419983 l
240.539993 642.119995 l
240.600006 641.940002 l
240.659988 641.519958 l
f
n
240.059998 641.519958 m
240.059998 641.459961 l
240.659988 641.519958 l
240.659988 641.459961 l
f
n
253.080002 665.219971 16.199997 23.400024 re
1.0 sg
f
n
252.360001 688.590027 m
269.279999 688.590027 l
1.500107 w
0.0  sg
S
1.0 w
n
253.110001 664.440002 m
253.110001 688.619995 l
1.5 w
S
1.0 w
n
253.080002 665.190002 m
269.279999 665.190002 l
1.5 w
S
1.0 w
n
253.080002 594.359985 16.199997 23.400024 re
1.0  sg
f
n
252.360001 617.72998 m
269.279999 617.72998 l
1.5 w
0.0  sg
S
1.0 w
n
253.110001 593.580017 m
253.110001 617.76001 l
1.5 w
S
1.0 w
n
253.080002 594.330017 m
269.279999 594.330017 l
1.5 w
S
1.0 w
n
359.160004 669.839966 m
359.100006 670.380005 l
358.97998 670.919983 l
358.679993 671.339966 l
358.380005 671.76001 l
357.959991 672.119995 l
357.539978 672.359985 l
357.0 672.47998 l
356.459991 672.539978 l
355.919983 672.47998 l
355.440002 672.359985 l
354.959991 672.119995 l
354.539978 671.76001 l
354.23999 671.339966 l
354.0 670.919983 l
353.820007 670.380005 l
353.759979 669.839966 l
353.820007 669.299988 l
354.0 668.820007 l
354.23999 668.339966 l
354.539978 667.919983 l
354.959991 667.619995 l
355.440002 667.380005 l
355.919983 667.200012 l
356.459991 667.140015 l
357.0 667.200012 l
357.539978 667.380005 l
357.959991 667.619995 l
358.380005 667.919983 l
358.679993 668.339966 l
358.97998 668.820007 l
359.100006 669.299988 l
359.160004 669.839966 l
1.0  sg
eofill
n
358.859985 669.779968 m
358.800018 670.320007 l
358.679993 670.859985 l
358.73999 670.73999 l
358.440002 671.159973 l
358.139984 671.579956 l
358.200012 671.519958 l
357.779999 671.880005 l
357.839996 671.820007 l
357.419983 672.059998 l
357.47998 672.059998 l
356.940002 672.179993 l
357.0 672.179993 l
356.459991 672.23999 l
356.519989 672.23999 l
355.97998 672.179993 l
355.5 672.059998 l
355.559998 672.059998 l
355.079987 671.820007 l
355.200012 671.880005 l
354.779999 671.519958 l
354.779999 671.579956 l
354.47998 671.159973 l
354.539978 671.159973 l
354.300018 670.73999 l
354.300018 670.799988 l
354.119995 670.26001 l
354.119995 670.320007 l
354.059998 669.779968 l
354.059998 669.839966 l
354.119995 669.299988 l
354.119995 669.419983 l
354.300018 668.940002 l
354.539978 668.459961 l
354.47998 668.519958 l
354.779999 668.100037 l
354.720001 668.159973 l
355.139984 667.859985 l
355.079987 667.859985 l
355.559998 667.619995 l
356.039978 667.440002 l
355.97998 667.5 l
356.519989 667.440002 l
356.459991 667.440002 l
357.0 667.5 l
356.940002 667.440002 l
357.47998 667.619995 l
357.419983 667.619995 l
357.839996 667.859985 l
357.779999 667.859985 l
358.200012 668.159973 l
358.139984 668.100037 l
358.440002 668.519958 l
358.440002 668.459961 l
358.73999 668.940002 l
358.679993 668.880005 l
358.800018 669.359985 l
358.800018 669.299988 l
358.859985 669.839966 l
359.459991 669.779968 l
359.399994 669.23999 l
359.279999 668.76001 l
359.220001 668.640015 l
358.919983 668.159973 l
358.619995 667.73999 l
358.559998 667.679993 l
358.139984 667.380005 l
358.139984 667.320007 l
357.720001 667.079956 l
357.660004 667.079956 l
357.119995 666.900024 l
357.059998 666.900024 l
356.519989 666.839966 l
356.459991 666.839966 l
355.919983 666.900024 l
355.800018 666.900024 l
355.319977 667.079956 l
354.839996 667.320007 l
354.779999 667.380005 l
354.359985 667.679993 l
354.300018 667.73999 l
354.0 668.159973 l
354.0 668.219971 l
353.759979 668.700012 l
353.579987 669.179993 l
353.519989 669.23999 l
353.459991 669.779968 l
353.459991 669.839966 l
353.519989 670.380005 l
353.579987 670.440002 l
353.759979 670.97998 l
353.759979 671.039978 l
354.0 671.459961 l
354.0 671.519958 l
354.300018 671.940002 l
354.359985 672.0 l
354.779999 672.359985 l
354.839996 672.359985 l
355.319977 672.600037 l
355.380005 672.659973 l
355.859985 672.779968 l
355.919983 672.779968 l
356.459991 672.839966 l
356.519989 672.839966 l
357.059998 672.779968 l
357.600006 672.659973 l
357.720001 672.600037 l
358.139984 672.359985 l
358.200012 672.359985 l
358.619995 672.0 l
358.619995 671.940002 l
358.919983 671.519958 l
359.220001 671.100037 l
359.279999 670.97998 l
359.399994 670.440002 l
359.399994 670.380005 l
359.459991 669.839966 l
0.0  sg
f
n
358.859985 669.839966 m
358.859985 669.779968 l
359.459991 669.839966 l
359.459991 669.779968 l
f
n
359.160004 613.140015 m
359.100006 613.679993 l
358.97998 614.219971 l
358.679993 614.700012 l
358.380005 615.059998 l
357.959991 615.419983 l
357.539978 615.659973 l
357.0 615.779968 l
356.459991 615.839966 l
355.919983 615.779968 l
355.440002 615.659973 l
354.959991 615.419983 l
354.539978 615.059998 l
354.23999 614.700012 l
354.0 614.219971 l
353.820007 613.679993 l
353.759979 613.140015 l
353.820007 612.600037 l
354.0 612.119995 l
354.23999 611.640015 l
354.539978 611.279968 l
354.959991 610.919983 l
355.440002 610.679993 l
355.919983 610.5 l
356.459991 610.440002 l
357.0 610.5 l
357.539978 610.679993 l
357.959991 610.919983 l
358.380005 611.279968 l
358.679993 611.640015 l
358.97998 612.119995 l
359.100006 612.600037 l
359.160004 613.140015 l
1.0  sg
eofill
n
358.859985 613.079956 m
358.800018 613.619995 l
358.679993 614.159973 l
358.73999 614.039978 l
358.440002 614.519958 l
358.139984 614.880005 l
358.200012 614.820007 l
357.779999 615.179993 l
357.839996 615.119995 l
357.419983 615.359985 l
357.47998 615.359985 l
356.940002 615.47998 l
357.0 615.47998 l
356.459991 615.539978 l
356.519989 615.539978 l
355.97998 615.47998 l
355.5 615.359985 l
355.559998 615.359985 l
355.079987 615.119995 l
355.200012 615.179993 l
354.779999 614.820007 l
354.779999 614.880005 l
354.47998 614.519958 l
354.539978 614.579956 l
354.300018 614.100037 l
354.119995 613.559998 l
354.119995 613.619995 l
354.059998 613.079956 l
354.059998 613.140015 l
354.119995 612.600037 l
354.119995 612.719971 l
354.300018 612.23999 l
354.539978 611.76001 l
354.47998 611.820007 l
354.779999 611.459961 l
354.779999 611.519958 l
355.200012 611.159973 l
355.079987 611.159973 l
355.559998 610.919983 l
356.039978 610.73999 l
355.97998 610.799988 l
356.519989 610.73999 l
356.459991 610.73999 l
357.0 610.799988 l
356.940002 610.73999 l
357.47998 610.919983 l
357.419983 610.919983 l
357.839996 611.159973 l
357.779999 611.159973 l
358.200012 611.519958 l
358.139984 611.459961 l
358.440002 611.820007 l
358.440002 611.76001 l
358.73999 612.23999 l
358.679993 612.179993 l
358.800018 612.659973 l
358.800018 612.600037 l
358.859985 613.140015 l
359.459991 613.079956 l
359.399994 612.539978 l
359.279999 612.059998 l
359.220001 611.940002 l
358.919983 611.459961 l
358.619995 611.100037 l
358.619995 611.039978 l
358.200012 610.679993 l
358.139984 610.619995 l
357.720001 610.380005 l
357.660004 610.380005 l
357.119995 610.200012 l
357.059998 610.200012 l
356.519989 610.140015 l
356.459991 610.140015 l
355.919983 610.200012 l
355.800018 610.200012 l
355.319977 610.380005 l
354.839996 610.619995 l
354.779999 610.679993 l
354.359985 611.039978 l
354.300018 611.100037 l
354.0 611.459961 l
354.0 611.519958 l
353.759979 612.0 l
353.579987 612.47998 l
353.519989 612.539978 l
353.459991 613.079956 l
353.459991 613.140015 l
353.519989 613.679993 l
353.579987 613.73999 l
353.759979 614.279968 l
353.759979 614.339966 l
354.0 614.820007 l
354.0 614.880005 l
354.300018 615.23999 l
354.359985 615.299988 l
354.779999 615.659973 l
354.839996 615.659973 l
355.319977 615.900024 l
355.380005 615.959961 l
355.859985 616.079956 l
355.919983 616.079956 l
356.459991 616.140015 l
356.519989 616.140015 l
357.059998 616.079956 l
357.600006 615.959961 l
357.720001 615.900024 l
358.139984 615.659973 l
358.200012 615.659973 l
358.619995 615.299988 l
358.619995 615.23999 l
358.919983 614.880005 l
358.919983 614.820007 l
359.220001 614.339966 l
359.279999 614.279968 l
359.399994 613.73999 l
359.399994 613.679993 l
359.459991 613.140015 l
0.0  sg
f
n
358.859985 613.140015 m
358.859985 613.079956 l
359.459991 613.140015 l
359.459991 613.079956 l
f
n
310.289978 663.059998 m
310.289978 663.659973 l
0.299988 w
S
1.0 w
n
310.440002 663.359985 m
325.799988 663.359985 l
0.599976 w
S
1.0 w
n
310.289978 619.919983 m
310.289978 620.519958 l
0.299988 w
S
1.0 w
n
310.440002 620.219971 m
325.619995 620.219971 l
0.599976 w
S
1.0 w
285.119995 597.299988 m
%ADOBeginSubsetFont: HODMHH+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HODMHH+TimesNewRomanPSMT gcheck setglobal} if
1 2584 66 <0001ffeffe460412fe9a00030020b900020327400d000f03003605020167
044748182b10f53c10f43c003fed3130012135210412fbdd0423fe465400
>HODMHH+TimesNewRomanPSMT AddT42Char 
1 4242 74 <0003003dfe4603db03af003b00490059039740821216509726993603002d
105b02762a765302002a062e06528b20043f374f5b6f377526705b8f048f
05831784188f358a3e83458f4b864f95179518994fb804b905b417b418c9
34c94bc05bd05be05bf05b1b1a201533103514361f5b05a7084a363f1b00
160336214a1b0019431211100f0e0d0c0b0a090913131409088025011225
b8ffdeb41214025525b8ffc0b3140c3f25b8ffc0400b120b3f9f25af25bf
250325b8019eb5582b80210121b8ffde400d12140255129f21af21bf2103
21b8ffc0b3140c3f21b8ffc0b3120b3f21b8019e4018904a014a40140c3f
4a40120b3f4a2c121202554a50140114b8010840136f08017f0801084011
14025508350699430143b80331400c194a0a2f1901501980190219bd02d2
00060009034d003c0331400a0607195101512c2c0f4dbe03300030001e03
300039004d0330401f1030016f308f309f300330180f100255300c101006
553035392e0380540154b8ffdeb40d0f025554b8ffcab41014025554b8ff
deb41010065554b8fff0400a0d0f065554251f280128b8ffc04016171a34
8f28014f287028c028d02804280e1010065528b8fff4b40f0f025528b8ff
ee4012101002552875205b305b405ba05bd05b055bb8ffc0401c0b0c345b
0e8f96460146101010065546312016010f167016cf160316b8fff2401110
100255160c11110255160c1010065516b802bd4013993f013f3130035003
02500301000310030203b8ffc0b3191d3403b8ffc0b30b0c3403b8fff4b4
1313025503b8fff4b70f10025503695a5bba01780021010ab189182b2bf6
2b2b2b2b5d7172ed72fd2b2b2b5d71ed2b72e4102b71f62b2b2b5d712b72
ed2b2b2b2b7110e4f42b2b5d72ed10ed10ed003fed723ffde610ed5d713f
10ed7210f42b5d5ded72102b2b2b5ded2b2b5d4358b4cf21df21025d592b
72f4ed5d2b2b2b4358b4cf25df25025d5972103c103c1112173911123939
111239011112393912393931304379407a4b573a4524351c1d1718010526
25323133313431030641264f262e252a265625541c011c3b1e1c004b354d
200042013f20003d053f1c00502d4d1c00522b5420014418461c01552757
1c0156571d3a1b1c011c1b3b004c314a20014b4a3536400243200001003e
043c1c014e2f511c0053295120004517431c00002b2b2b2b103c2b103c10
3c2b103c103c2b103c2b012b2b2b2b2b2b2b2b2b2b2b2b2a2b8181818181
8101725d00715d01710072435c58400a2e10120b3f351012392eb8fff0b1
1239002b2b2b590126263534363332173332161716151407060623231615
140623222706061514161716171617161615140706232227263534373637
363726263534360122061514171633323635342726010606151417163332
363534272627260135545acda08360c22b0e030605030f2b7738c4a54447
2c1f21301c70ce3d5d6f6a9cfbc1854b0b1135075f342b3901154a644434
504c624533fef82f303a64bdb4ab33349ae1014e29935988c44005060917
1a0a0506487080b614263914112007040305090d70527163925732361818
254209631f311f235e0287767a9e5742727a9f5a42fc8133582530243e7f
483416160406>HODMHH+TimesNewRomanPSMT AddT42Char 
HODMHH+TimesNewRomanPSMT /CharStrings get begin
/underscore 66 def
/g 74 def
end
HODMHH+TimesNewRomanPSMT /Encoding get
dup 95 /underscore put
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(S_g)
[5.021098 4.5171 4.5171 ] pdfxs
400.259705 666.959961 m
%ADOBeginSubsetFont: HODMHH+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HODMHH+TimesNewRomanPSMT gcheck setglobal} if
1 758 52 <00020048fe6f0579056b0015002600fd402945015807950103060e015701
580766017601860190009608c70fe50009040f40004201035608039704b8
02d0402f0816281003001eac0808200030007000800004005208080d032b
223c1f132f13020013101320133013401305134928b8ffc0401a3f352028
402802281a3c100d200d020f0d1f0d020d49276463182b4e10f45d724ded
4d10712bf65d724dede412392fed5d003fed3c3fed10f4ed313043794040
092620251c260b0c0a0c020618252423252302061f15222d011d091a2d00
170f1a2d002611222d0121141e2d0015001b0c1e2d000908190e162d0123
12162d012b2b103c2b103c2b012b2b2b2b2a2b2a2b2b8101715d00715d05
161617152624242726272602351000212000111400012207061110171633
3237361134272626038666ed978afec6fee76690547a87018a0118010a01
85feebfe7ab66f8c8e6eb5bc73874a39bd0fb0a60c200565b3653a416101
1bc101300192fe6dfecdf9fe8804ea82a3feb0feb7b28989a2013cf3a680
7900>HODMHH+TimesNewRomanPSMT AddT42Char 
1 2644 68 <00020049ffed038903af0032003d0349b1020243545840203f400d0d0255
3f4013130255151b072e25080b0b0255250c0d0d025525000c33b8fff040
0b1212025533161313025533b8ffdeb41010025533b8fff440150f0f0255
330c0d0d02553339070c0d0d0255072d2eb8ffc04020091202552e33001e
04292c30340c40090b02550c401d1d02550c40111202550cb8ffd4401e09
1202550c0c047f180118401112025518401d1d02551810251e073c2c0400
2fed3fedc42b2b5d12392f2b2b2b2bcd2ffd11123939d42bcd012f2bcd2f
2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a330212533601
12201f39803fa809b60a03122b127d007d3386008b0b8b35061d12163a10
3f803f04091c4c054c06452045224c3a403f891d080a0e0720002249014b
0a490b49354b37433a493d570b670b8509840a840b0f54168316021f3f5f
3f0260083300343c2e292d34bb011b000c000cffc0b609390c280b390cb8
ffc0401a3a35100c500c02400c500c600c03200c500c600c760c040c3c18
b8ffd840290b394f185f186f18032f187f1802187e1f100110251e07303c
403c023c2c04702d802d022d35292c30b803464011040b2ec02d012d6025
00330d0c0c343433b8fffcb41010065533bb016700240025ffc0401a0e39
00251f2580259025044025f0250280250125101010065525bb0243000700
15ffc0b21f3915b80167401e1b2f393107400e3920075007800703100701
f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b10fd2b5d
71722b3cfd2b3c103c103c103c10f65d3c003ff4fde45d10ed713fed72fd
5d712b11395d71722b2b2b2fb10602435458b2030c01005d59ed11123911
123939313043794047353b1c23051337383638020609080a080206212220
220206350b392000111d131c0012130f1f0d1c0122233b05391c00380834
200135340b121c101c010e22101c013a063c1c002b2b2b3c103c2b012b10
3c2b103c2b2b2a2a2a818181017201710071017172005d4358b23f12015d
59015d2b0072435c58b431400e392eb8ffe0b210392eb8ffe0b60e393720
0e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391cb8fff040
1a0b390a280b3937280b390a280a3937280a390a28093937280939002b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b59005d5925060706232226353437363637
353426232207061517140623222635343633321716171615111416163332
3736371506232226271106070606151416333202478d24363d5f7b1e29cb
ec57533f2526022f26252fb09f7a4e3b1c120a170f100c153c7066313a01
972c4f4456384c846d1119826a433144785624896622222c3a2e32342d56
90291f422b85fec9833b14070d3c38964493015d3c192c6039485f00>HODMHH+TimesNewRomanPSMT AddT42Char 

1 0 3 <> HODMHH+TimesNewRomanPSMT AddT42Char 
1 118 11 <00010054fe4a027c058e0013003a40239611a71102860c8911020a980911
009801130100000a09a80e22500601068014545e182b10f65dedfd3c3c10
3c003fed3fed3130005d015d01152627260235100037150606021514171e
02027c9765909c0132f67b9e4e211a4a7dfe6f254c6691018ad4013601ff
6e2a44ecfe96c5d6af8aa79a>HODMHH+TimesNewRomanPSMT AddT42Char 
1 250 12 <0001002efe4a0256058e00130039402429042a08480503009801110a9809
13000101090aa80e222006300640060306801558a4182b10f65dedfd3c3c
103c003fed3fed3130015d13351617161215100007353636123534272e02
2e98658f9cfecff77b9f4d21194b7c05642a4b6692fe77d5fecafe016e25
45eb016bc5d5b08aa69a>HODMHH+TimesNewRomanPSMT AddT42Char 
HODMHH+TimesNewRomanPSMT /CharStrings get begin
/Q 52 def
/a 68 def
/space 3 def
/parenleft 11 def
/parenright 12 def
end
HODMHH+TimesNewRomanPSMT /Encoding get
dup 81 /Q put
dup 97 /a put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Qa \(Q\))
[6.480001 3.978002 2.2797 2.978933 6.480001 2.978933 ] pdfxs
285.119995 681.179932 m
%ADOBeginSubsetFont: HODMHH+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HODMHH+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(R) show
%ADOBeginSubsetFont: HODMHH+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HODMHH+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(_g)
[4.4982 4.4982 ] pdfxs
400.259705 610.919617 m
%ADOBeginSubsetFont: HODMHH+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HODMHH+TimesNewRomanPSMT gcheck setglobal} if
1 3662 69 <0002fffbffe403b9058e0016002401d2b10202435458b11e05b8fff44010
1010025505140c00180a0d0d0255180cb8ffe6b4131302550cb8fffcb40d
0d02550cb8fffcb40f0f02550cb8fff4400d101002550c0c181700040209
13b803e240111440090d02551415001b25090b21590207003fed3fed3fdd
2bed11121739012f2b2b2b2bdd2bc010c62f2bcd31301bb1060243545840
2618170003020913141500215902071b25090b1e0505262500180c0d0d06
55180210100655180cb8fff8b40d0d06550cb8ffeeb7101006550c0c2625
1112392f2b2bdd2b2bc01112392fcd003fed3fed3fddcd1112173931301b
4079102601a406b606b507ea1f040526430d5d3620267503760486038704
a603ab08074707013a0814270d41131e144418170c00041b160010210121
5902071b25090b1e311f0590050260058005af050305eb0c16000018240c
0c100d500d700d900d04800d900db00d03000d100d200d300db00dc00dd0
0d070db8ffc0b73c350d6025c24b182b4e10f42b5d71723c4d10fd3c103c
10fd5d72ed003fed3fed723f111739f5edfc01f53130437940281920030b
072620031e20011a0a181c0019180b0c1c081e20011f04212001190b1b1c
001d061b2000002b2b2b012b103c103c2b2b2b81810071015d2b005d0172
595901363332161514070623222627113426262322072725331111161633
323635342623220706013b859a8dd2a28bab50a5560f20181c2a0e01132d
336d395b9d9d6435352802f6b9f1d1f495803a3a03b59c481a102370fd28
fddc3233c8bfb0bd1b14>HODMHH+TimesNewRomanPSMT AddT42Char 
HODMHH+TimesNewRomanPSMT /CharStrings get begin
/b 69 def
end
HODMHH+TimesNewRomanPSMT /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Qb)
[6.478201 4.4802 ] pdfxs
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
